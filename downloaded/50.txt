<!doctype html><!-- NewPage -->
<html lang="en"> 
 <head> 
  <title>Jsoup (jsoup Java HTML Parser 1.14.3 API)</title> 
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> 
  <meta name="dc.created" content="2021-10-01"> 
  <meta name="description" content="declaration: package: org.jsoup, class: Jsoup"> 
  <meta name="generator" content="javadoc/ClassWriterImpl"> 
  <link rel="stylesheet" type="text/css" href="../../stylesheet.css" title="Style"> 
  <meta name="viewport" content="width=device-width, initial-scale=1"> 
 </head> 
 <body class="class-declaration-page"> 
  <div class="flex-box"> 
   <header role="banner" class="flex-header"> 
    <nav role="navigation"> <!-- ========= START OF TOP NAVBAR ======= --> 
     <div class="top-nav" id="navbar.top"> 
      <div class="skip-nav"> <a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a> 
      </div> 
      <ul id="navbar.top.firstrow" class="nav-list" title="Navigation"> 
       <li class="home"><a href="//jsoup.org/" title="jsoup, the HTML parser for Java">jsoup</a></li> 
       <li><a href="../../index.html">Overview</a></li> 
       <li><a href="package-summary.html">Package</a></li> 
       <li class="nav-bar-cell1-rev">Class</li> 
       <li><a href="class-use/Jsoup.html">Use</a></li> 
       <li><a href="package-tree.html">Tree</a></li> 
       <li><a href="../../deprecated-list.html">Deprecated</a></li> 
       <li><a href="../../index-all.html">Index</a></li> 
       <li><a href="../../help-doc.html">Help</a></li> 
      </ul> 
     </div> <!-- ========= END OF TOP NAVBAR ========= --> <span class="skip-nav" id="skip.navbar.top"> <!--   --> </span> 
    </nav> 
   </header> 
   <div class="flex-content"> 
    <main role="main"> <!-- ======== START OF CLASS DATA ======== --> 
     <div class="header"> 
      <div class="sub-title"> <span class="package-label-in-type">Package</span>&nbsp;<a href="package-summary.html">org.jsoup</a> 
      </div> 
      <h1 title="Class Jsoup" class="title">Class Jsoup</h1> 
     </div> 
     <div class="inheritance" title="Inheritance Tree"> <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html" title="class or interface in java.lang" class="external-link">java.lang.Object</a> 
      <div class="inheritance">
        org.jsoup.Jsoup 
      </div> 
     </div> 
     <section class="description"> 
      <hr> 
      <pre>public class <span class="type-name-label">Jsoup</span>
extends <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html" title="class or interface in java.lang" class="external-link">Object</a></pre> 
      <div class="block">
        The core public access point to the jsoup functionality. 
      </div> 
      <dl class="notes"> 
       <dt>
         Author: 
       </dt> 
       <dd>
         Jonathan Hedley 
       </dd> 
      </dl> 
     </section> 
     <section class="summary"> 
      <ul class="summary-list"> <!-- ========== METHOD SUMMARY =========== --> 
       <li> 
        <section class="method-summary" id="method.summary"> 
         <h2>Method Summary</h2> 
         <div class="member-summary" id="method-summary-table"> 
          <div id="method-summary-table.tabpanel" role="tabpanel"> 
           <table class="summary-table" aria-labelledby="t0"> 
            <thead> 
             <tr> 
              <th class="col-first" scope="col">Modifier and Type</th> 
              <th class="col-second" scope="col">Method</th> 
              <th class="col-last" scope="col">Description</th> 
             </tr> 
            </thead> 
            <tbody> 
             <tr class="alt-color" id="i0"> 
              <td class="col-first"><code>static <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#clean(java.lang.String,java.lang.String,org.jsoup.safety.Safelist)">clean</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;bodyHtml, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;baseUri, <a href="safety/Safelist.html" title="class in org.jsoup.safety">Safelist</a>&nbsp;safelist)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Get safe HTML from untrusted input HTML, by parsing input HTML and filtering it through an allow-list of safe tags and attributes. 
               </div> </td> 
             </tr> 
             <tr class="row-color" id="i1"> 
              <td class="col-first"><code>static <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#clean(java.lang.String,java.lang.String,org.jsoup.safety.Safelist,org.jsoup.nodes.Document.OutputSettings)">clean</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;bodyHtml, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;baseUri, <a href="safety/Safelist.html" title="class in org.jsoup.safety">Safelist</a>&nbsp;safelist, <a href="nodes/Document.OutputSettings.html" title="class in org.jsoup.nodes">Document.OutputSettings</a>&nbsp;outputSettings)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Get safe HTML from untrusted input HTML, by parsing input HTML and filtering it through a safe-list of permitted tags and attributes. 
               </div> </td> 
             </tr> 
             <tr class="alt-color" id="i2"> 
              <td class="col-first"><code>static <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#clean(java.lang.String,java.lang.String,org.jsoup.safety.Whitelist)">clean</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;bodyHtml, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;baseUri, <a href="safety/Whitelist.html" title="class in org.jsoup.safety">Whitelist</a>&nbsp;safelist)</code></th> 
              <td class="col-last"> 
               <div class="block"> <span class="deprecated-label">Deprecated.</span> 
                <div class="deprecation-comment">
                  as of 1.14.1. 
                </div> 
               </div> </td> 
             </tr> 
             <tr class="row-color" id="i3"> 
              <td class="col-first"><code>static <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#clean(java.lang.String,java.lang.String,org.jsoup.safety.Whitelist,org.jsoup.nodes.Document.OutputSettings)">clean</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;bodyHtml, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;baseUri, <a href="safety/Whitelist.html" title="class in org.jsoup.safety">Whitelist</a>&nbsp;safelist, <a href="nodes/Document.OutputSettings.html" title="class in org.jsoup.nodes">Document.OutputSettings</a>&nbsp;outputSettings)</code></th> 
              <td class="col-last"> 
               <div class="block"> <span class="deprecated-label">Deprecated.</span> 
                <div class="deprecation-comment">
                  as of 1.14.1. 
                </div> 
               </div> </td> 
             </tr> 
             <tr class="alt-color" id="i4"> 
              <td class="col-first"><code>static <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#clean(java.lang.String,org.jsoup.safety.Safelist)">clean</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;bodyHtml, <a href="safety/Safelist.html" title="class in org.jsoup.safety">Safelist</a>&nbsp;safelist)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Get safe HTML from untrusted input HTML, by parsing input HTML and filtering it through a safe-list of permitted tags and attributes. 
               </div> </td> 
             </tr> 
             <tr class="row-color" id="i5"> 
              <td class="col-first"><code>static <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#clean(java.lang.String,org.jsoup.safety.Whitelist)">clean</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;bodyHtml, <a href="safety/Whitelist.html" title="class in org.jsoup.safety">Whitelist</a>&nbsp;safelist)</code></th> 
              <td class="col-last"> 
               <div class="block"> <span class="deprecated-label">Deprecated.</span> 
                <div class="deprecation-comment">
                  as of 1.14.1. 
                </div> 
               </div> </td> 
             </tr> 
             <tr class="alt-color" id="i6"> 
              <td class="col-first"><code>static <a href="Connection.html" title="interface in org.jsoup">Connection</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#connect(java.lang.String)">connect</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;url)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Creates a new <a href="Connection.html" title="interface in org.jsoup"><code>Connection</code></a> (session), with the defined request URL. 
               </div> </td> 
             </tr> 
             <tr class="row-color" id="i7"> 
              <td class="col-first"><code>static boolean</code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#isValid(java.lang.String,org.jsoup.safety.Safelist)">isValid</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;bodyHtml, <a href="safety/Safelist.html" title="class in org.jsoup.safety">Safelist</a>&nbsp;safelist)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Test if the input body HTML has only tags and attributes allowed by the Safelist. 
               </div> </td> 
             </tr> 
             <tr class="alt-color" id="i8"> 
              <td class="col-first"><code>static boolean</code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#isValid(java.lang.String,org.jsoup.safety.Whitelist)">isValid</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;bodyHtml, <a href="safety/Whitelist.html" title="class in org.jsoup.safety">Whitelist</a>&nbsp;safelist)</code></th> 
              <td class="col-last"> 
               <div class="block"> <span class="deprecated-label">Deprecated.</span> 
                <div class="deprecation-comment">
                  as of 1.14.1. 
                </div> 
               </div> </td> 
             </tr> 
             <tr class="row-color" id="i9"> 
              <td class="col-first"><code>static <a href="Connection.html" title="interface in org.jsoup">Connection</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#newSession()">newSession</a></span>()</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Creates a new <a href="Connection.html" title="interface in org.jsoup"><code>Connection</code></a> to use as a session. 
               </div> </td> 
             </tr> 
             <tr class="alt-color" id="i10"> 
              <td class="col-first"><code>static <a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#parse(java.io.File,java.lang.String)">parse</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/io/File.html" title="class or interface in java.io" class="external-link">File</a>&nbsp;file, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;charsetName)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Parse the contents of a file as HTML. 
               </div> </td> 
             </tr> 
             <tr class="row-color" id="i11"> 
              <td class="col-first"><code>static <a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#parse(java.io.File,java.lang.String,java.lang.String)">parse</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/io/File.html" title="class or interface in java.io" class="external-link">File</a>&nbsp;file, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;charsetName, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;baseUri)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Parse the contents of a file as HTML. 
               </div> </td> 
             </tr> 
             <tr class="alt-color" id="i12"> 
              <td class="col-first"><code>static <a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#parse(java.io.File,java.lang.String,java.lang.String,org.jsoup.parser.Parser)">parse</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/io/File.html" title="class or interface in java.io" class="external-link">File</a>&nbsp;file, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;charsetName, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;baseUri, <a href="parser/Parser.html" title="class in org.jsoup.parser">Parser</a>&nbsp;parser)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Parse the contents of a file as HTML. 
               </div> </td> 
             </tr> 
             <tr class="row-color" id="i13"> 
              <td class="col-first"><code>static <a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#parse(java.io.InputStream,java.lang.String,java.lang.String)">parse</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html" title="class or interface in java.io" class="external-link">InputStream</a>&nbsp;in, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;charsetName, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;baseUri)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Read an input stream, and parse it to a Document. 
               </div> </td> 
             </tr> 
             <tr class="alt-color" id="i14"> 
              <td class="col-first"><code>static <a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#parse(java.io.InputStream,java.lang.String,java.lang.String,org.jsoup.parser.Parser)">parse</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html" title="class or interface in java.io" class="external-link">InputStream</a>&nbsp;in, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;charsetName, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;baseUri, <a href="parser/Parser.html" title="class in org.jsoup.parser">Parser</a>&nbsp;parser)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Read an input stream, and parse it to a Document. 
               </div> </td> 
             </tr> 
             <tr class="row-color" id="i15"> 
              <td class="col-first"><code>static <a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#parse(java.lang.String)">parse</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;html)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Parse HTML into a Document. 
               </div> </td> 
             </tr> 
             <tr class="alt-color" id="i16"> 
              <td class="col-first"><code>static <a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#parse(java.lang.String,java.lang.String)">parse</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;html, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;baseUri)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Parse HTML into a Document. 
               </div> </td> 
             </tr> 
             <tr class="row-color" id="i17"> 
              <td class="col-first"><code>static <a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#parse(java.lang.String,java.lang.String,org.jsoup.parser.Parser)">parse</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;html, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;baseUri, <a href="parser/Parser.html" title="class in org.jsoup.parser">Parser</a>&nbsp;parser)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Parse HTML into a Document, using the provided Parser. 
               </div> </td> 
             </tr> 
             <tr class="alt-color" id="i18"> 
              <td class="col-first"><code>static <a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#parse(java.lang.String,org.jsoup.parser.Parser)">parse</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;html, <a href="parser/Parser.html" title="class in org.jsoup.parser">Parser</a>&nbsp;parser)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Parse HTML into a Document, using the provided Parser. 
               </div> </td> 
             </tr> 
             <tr class="row-color" id="i19"> 
              <td class="col-first"><code>static <a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#parse(java.net.URL,int)">parse</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/net/URL.html" title="class or interface in java.net" class="external-link">URL</a>&nbsp;url, int&nbsp;timeoutMillis)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Fetch a URL, and parse it as HTML. 
               </div> </td> 
             </tr> 
             <tr class="alt-color" id="i20"> 
              <td class="col-first"><code>static <a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#parseBodyFragment(java.lang.String)">parseBodyFragment</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;bodyHtml)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Parse a fragment of HTML, with the assumption that it forms the <code>body</code> of the HTML. 
               </div> </td> 
             </tr> 
             <tr class="row-color" id="i21"> 
              <td class="col-first"><code>static <a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#parseBodyFragment(java.lang.String,java.lang.String)">parseBodyFragment</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;bodyHtml, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;baseUri)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Parse a fragment of HTML, with the assumption that it forms the <code>body</code> of the HTML. 
               </div> </td> 
             </tr> 
            </tbody> 
           </table> 
          </div> 
         </div> 
         <div class="inherited-list"> 
          <h3 id="methods.inherited.from.class.java.lang.Object">Methods inherited from class&nbsp;java.lang.<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html" title="class or interface in java.lang" class="external-link">Object</a></h3> <code><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#clone()" title="class or interface in java.lang" class="external-link">clone</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#equals(java.lang.Object)" title="class or interface in java.lang" class="external-link">equals</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#finalize()" title="class or interface in java.lang" class="external-link">finalize</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#getClass()" title="class or interface in java.lang" class="external-link">getClass</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#hashCode()" title="class or interface in java.lang" class="external-link">hashCode</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#notify()" title="class or interface in java.lang" class="external-link">notify</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#notifyAll()" title="class or interface in java.lang" class="external-link">notifyAll</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#toString()" title="class or interface in java.lang" class="external-link">toString</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#wait()" title="class or interface in java.lang" class="external-link">wait</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#wait(long)" title="class or interface in java.lang" class="external-link">wait</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#wait(long,int)" title="class or interface in java.lang" class="external-link">wait</a></code> 
         </div> 
        </section> </li> 
      </ul> 
     </section> 
     <section class="details"> 
      <ul class="details-list"> <!-- ============ METHOD DETAIL ========== --> 
       <li> 
        <section class="method-details" id="method.detail"> 
         <h2>Method Details</h2> 
         <ul class="member-list"> 
          <li> 
           <section class="detail" id="parse(java.lang.String,java.lang.String)"> 
            <h3>parse</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></span>&nbsp;<span class="member-name">parse</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;html, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;baseUri)</span> 
            </div> 
            <div class="block">
              Parse HTML into a Document. The parser will make a sensible, balanced document tree out of any HTML. 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>html</code> - HTML to parse 
             </dd> 
             <dd> <code>baseUri</code> - The URL where the HTML was retrieved from. Used to resolve relative URLs to absolute URLs, that occur before the HTML declares a <code>&lt;base href&gt;</code> tag. 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               sane HTML 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="parse(java.lang.String,java.lang.String,org.jsoup.parser.Parser)"> 
            <h3>parse</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></span>&nbsp;<span class="member-name">parse</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;html, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;baseUri, <a href="parser/Parser.html" title="class in org.jsoup.parser">Parser</a>&nbsp;parser)</span> 
            </div> 
            <div class="block">
              Parse HTML into a Document, using the provided Parser. You can provide an alternate parser, such as a simple XML (non-HTML) parser. 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>html</code> - HTML to parse 
             </dd> 
             <dd> <code>baseUri</code> - The URL where the HTML was retrieved from. Used to resolve relative URLs to absolute URLs, that occur before the HTML declares a <code>&lt;base href&gt;</code> tag. 
             </dd> 
             <dd> <code>parser</code> - alternate <a href="parser/Parser.html#xmlParser()"><code>parser</code></a> to use. 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               sane HTML 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="parse(java.lang.String,org.jsoup.parser.Parser)"> 
            <h3>parse</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></span>&nbsp;<span class="member-name">parse</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;html, <a href="parser/Parser.html" title="class in org.jsoup.parser">Parser</a>&nbsp;parser)</span> 
            </div> 
            <div class="block">
              Parse HTML into a Document, using the provided Parser. You can provide an alternate parser, such as a simple XML (non-HTML) parser. As no base URI is specified, absolute URL resolution, if required, relies on the HTML including a <code>&lt;base href&gt;</code> tag. 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>html</code> - HTML to parse before the HTML declares a <code>&lt;base href&gt;</code> tag. 
             </dd> 
             <dd> <code>parser</code> - alternate <a href="parser/Parser.html#xmlParser()"><code>parser</code></a> to use. 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               sane HTML 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="parse(java.lang.String)"> 
            <h3>parse</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></span>&nbsp;<span class="member-name">parse</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;html)</span> 
            </div> 
            <div class="block">
              Parse HTML into a Document. As no base URI is specified, absolute URL resolution, if required, relies on the HTML including a <code>&lt;base href&gt;</code> tag. 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>html</code> - HTML to parse 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               sane HTML 
             </dd> 
             <dt>
               See Also: 
             </dt> 
             <dd> <a href="#parse(java.lang.String,java.lang.String)"><code>parse(String, String)</code></a> 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="connect(java.lang.String)"> 
            <h3>connect</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="Connection.html" title="interface in org.jsoup">Connection</a></span>&nbsp;<span class="member-name">connect</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;url)</span> 
            </div> 
            <div class="block">
              Creates a new <a href="Connection.html" title="interface in org.jsoup"><code>Connection</code></a> (session), with the defined request URL. Use to fetch and parse a HTML page. 
             <p> Use examples: </p> 
             <ul> 
              <li><code>Document doc = Jsoup.connect("http://example.com").userAgent("Mozilla").data("name", "jsoup").get();</code></li> 
              <li><code>Document doc = Jsoup.connect("http://example.com").cookie("auth", "token").post();</code></li> 
             </ul> 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>url</code> - URL to connect to. The protocol must be <code>http</code> or <code>https</code>. 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               the connection. You can add data, cookies, and headers; set the user-agent, referrer, method; and then execute. 
             </dd> 
             <dt>
               See Also: 
             </dt> 
             <dd> <a href="#newSession()"><code>newSession()</code></a>, <a href="Connection.html#newRequest()"><code>Connection.newRequest()</code></a> 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="newSession()"> 
            <h3>newSession</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="Connection.html" title="interface in org.jsoup">Connection</a></span>&nbsp;<span class="member-name">newSession</span>() 
            </div> 
            <div class="block">
              Creates a new <a href="Connection.html" title="interface in org.jsoup"><code>Connection</code></a> to use as a session. Connection settings (user-agent, timeouts, URL, etc), and cookies will be maintained for the session. Use examples: 
             <pre><code>
Connection session = Jsoup.newSession()
     .timeout(20 * 1000)
     .userAgent("FooBar 2000");

Document doc1 = session.newRequest()
     .url("https://jsoup.org/").data("ref", "example")
     .get();
Document doc2 = session.newRequest()
     .url("https://en.wikipedia.org/wiki/Main_Page")
     .get();
Connection con3 = session.newRequest();
</code></pre> 
             <p>For multi-threaded requests, it is safe to use this session between threads, but take care to call <a href="Connection.html#newRequest()"><code>Connection.newRequest()</code></a> per request and not share that instance between threads when executing or parsing.</p> 
            </div> 
            <dl class="notes"> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               a connection 
             </dd> 
             <dt>
               Since: 
             </dt> 
             <dd>
               1.14.1 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="parse(java.io.File,java.lang.String,java.lang.String)"> 
            <h3>parse</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></span>&nbsp;<span class="member-name">parse</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/io/File.html" title="class or interface in java.io" class="external-link">File</a>&nbsp;file, <a href="https://docs.oracle.com/javase/7/docs/api/javax/annotation/Nullable.html" title="class or interface in javax.annotation" class="external-link">@Nullable</a> <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;charsetName, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;baseUri)</span> throws <span class="exceptions"><a href="https://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class or interface in java.io" class="external-link">IOException</a></span> 
            </div> 
            <div class="block">
              Parse the contents of a file as HTML. 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>file</code> - file to load HTML from. Supports gzipped files (ending in .z or .gz). 
             </dd> 
             <dd> <code>charsetName</code> - (optional) character set of file contents. Set to <code>null</code> to determine from <code>http-equiv</code> meta tag, if present, or fall back to <code>UTF-8</code> (which is often safe to do). 
             </dd> 
             <dd> <code>baseUri</code> - The URL where the HTML was retrieved from, to resolve relative links against. 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               sane HTML 
             </dd> 
             <dt>
               Throws: 
             </dt> 
             <dd> <code><a href="https://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class or interface in java.io" class="external-link">IOException</a></code> - if the file could not be found, or read, or if the charsetName is invalid. 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="parse(java.io.File,java.lang.String)"> 
            <h3>parse</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></span>&nbsp;<span class="member-name">parse</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/io/File.html" title="class or interface in java.io" class="external-link">File</a>&nbsp;file, <a href="https://docs.oracle.com/javase/7/docs/api/javax/annotation/Nullable.html" title="class or interface in javax.annotation" class="external-link">@Nullable</a> <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;charsetName)</span> throws <span class="exceptions"><a href="https://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class or interface in java.io" class="external-link">IOException</a></span> 
            </div> 
            <div class="block">
              Parse the contents of a file as HTML. The location of the file is used as the base URI to qualify relative URLs. 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>file</code> - file to load HTML from. Supports gzipped files (ending in .z or .gz). 
             </dd> 
             <dd> <code>charsetName</code> - (optional) character set of file contents. Set to <code>null</code> to determine from <code>http-equiv</code> meta tag, if present, or fall back to <code>UTF-8</code> (which is often safe to do). 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               sane HTML 
             </dd> 
             <dt>
               Throws: 
             </dt> 
             <dd> <code><a href="https://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class or interface in java.io" class="external-link">IOException</a></code> - if the file could not be found, or read, or if the charsetName is invalid. 
             </dd> 
             <dt>
               See Also: 
             </dt> 
             <dd> <a href="#parse(java.io.File,java.lang.String,java.lang.String)"><code>parse(File, String, String)</code></a> 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="parse(java.io.File,java.lang.String,java.lang.String,org.jsoup.parser.Parser)"> 
            <h3>parse</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></span>&nbsp;<span class="member-name">parse</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/io/File.html" title="class or interface in java.io" class="external-link">File</a>&nbsp;file, <a href="https://docs.oracle.com/javase/7/docs/api/javax/annotation/Nullable.html" title="class or interface in javax.annotation" class="external-link">@Nullable</a> <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;charsetName, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;baseUri, <a href="parser/Parser.html" title="class in org.jsoup.parser">Parser</a>&nbsp;parser)</span> throws <span class="exceptions"><a href="https://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class or interface in java.io" class="external-link">IOException</a></span> 
            </div> 
            <div class="block">
              Parse the contents of a file as HTML. 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>file</code> - file to load HTML from. Supports gzipped files (ending in .z or .gz). 
             </dd> 
             <dd> <code>charsetName</code> - (optional) character set of file contents. Set to <code>null</code> to determine from <code>http-equiv</code> meta tag, if present, or fall back to <code>UTF-8</code> (which is often safe to do). 
             </dd> 
             <dd> <code>baseUri</code> - The URL where the HTML was retrieved from, to resolve relative links against. 
             </dd> 
             <dd> <code>parser</code> - alternate <a href="parser/Parser.html#xmlParser()"><code>parser</code></a> to use. 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               sane HTML 
             </dd> 
             <dt>
               Throws: 
             </dt> 
             <dd> <code><a href="https://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class or interface in java.io" class="external-link">IOException</a></code> - if the file could not be found, or read, or if the charsetName is invalid. 
             </dd> 
             <dt>
               Since: 
             </dt> 
             <dd>
               1.14.2 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="parse(java.io.InputStream,java.lang.String,java.lang.String)"> 
            <h3>parse</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></span>&nbsp;<span class="member-name">parse</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html" title="class or interface in java.io" class="external-link">InputStream</a>&nbsp;in, <a href="https://docs.oracle.com/javase/7/docs/api/javax/annotation/Nullable.html" title="class or interface in javax.annotation" class="external-link">@Nullable</a> <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;charsetName, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;baseUri)</span> throws <span class="exceptions"><a href="https://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class or interface in java.io" class="external-link">IOException</a></span> 
            </div> 
            <div class="block">
              Read an input stream, and parse it to a Document. 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>in</code> - input stream to read. Make sure to close it after parsing. 
             </dd> 
             <dd> <code>charsetName</code> - (optional) character set of file contents. Set to <code>null</code> to determine from <code>http-equiv</code> meta tag, if present, or fall back to <code>UTF-8</code> (which is often safe to do). 
             </dd> 
             <dd> <code>baseUri</code> - The URL where the HTML was retrieved from, to resolve relative links against. 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               sane HTML 
             </dd> 
             <dt>
               Throws: 
             </dt> 
             <dd> <code><a href="https://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class or interface in java.io" class="external-link">IOException</a></code> - if the file could not be found, or read, or if the charsetName is invalid. 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="parse(java.io.InputStream,java.lang.String,java.lang.String,org.jsoup.parser.Parser)"> 
            <h3>parse</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></span>&nbsp;<span class="member-name">parse</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html" title="class or interface in java.io" class="external-link">InputStream</a>&nbsp;in, <a href="https://docs.oracle.com/javase/7/docs/api/javax/annotation/Nullable.html" title="class or interface in javax.annotation" class="external-link">@Nullable</a> <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;charsetName, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;baseUri, <a href="parser/Parser.html" title="class in org.jsoup.parser">Parser</a>&nbsp;parser)</span> throws <span class="exceptions"><a href="https://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class or interface in java.io" class="external-link">IOException</a></span> 
            </div> 
            <div class="block">
              Read an input stream, and parse it to a Document. You can provide an alternate parser, such as a simple XML (non-HTML) parser. 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>in</code> - input stream to read. Make sure to close it after parsing. 
             </dd> 
             <dd> <code>charsetName</code> - (optional) character set of file contents. Set to <code>null</code> to determine from <code>http-equiv</code> meta tag, if present, or fall back to <code>UTF-8</code> (which is often safe to do). 
             </dd> 
             <dd> <code>baseUri</code> - The URL where the HTML was retrieved from, to resolve relative links against. 
             </dd> 
             <dd> <code>parser</code> - alternate <a href="parser/Parser.html#xmlParser()"><code>parser</code></a> to use. 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               sane HTML 
             </dd> 
             <dt>
               Throws: 
             </dt> 
             <dd> <code><a href="https://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class or interface in java.io" class="external-link">IOException</a></code> - if the file could not be found, or read, or if the charsetName is invalid. 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="parseBodyFragment(java.lang.String,java.lang.String)"> 
            <h3>parseBodyFragment</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></span>&nbsp;<span class="member-name">parseBodyFragment</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;bodyHtml, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;baseUri)</span> 
            </div> 
            <div class="block">
              Parse a fragment of HTML, with the assumption that it forms the <code>body</code> of the HTML. 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>bodyHtml</code> - body HTML fragment 
             </dd> 
             <dd> <code>baseUri</code> - URL to resolve relative URLs against. 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               sane HTML document 
             </dd> 
             <dt>
               See Also: 
             </dt> 
             <dd> <a href="nodes/Document.html#body()"><code>Document.body()</code></a> 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="parseBodyFragment(java.lang.String)"> 
            <h3>parseBodyFragment</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></span>&nbsp;<span class="member-name">parseBodyFragment</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;bodyHtml)</span> 
            </div> 
            <div class="block">
              Parse a fragment of HTML, with the assumption that it forms the <code>body</code> of the HTML. 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>bodyHtml</code> - body HTML fragment 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               sane HTML document 
             </dd> 
             <dt>
               See Also: 
             </dt> 
             <dd> <a href="nodes/Document.html#body()"><code>Document.body()</code></a> 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="parse(java.net.URL,int)"> 
            <h3>parse</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="nodes/Document.html" title="class in org.jsoup.nodes">Document</a></span>&nbsp;<span class="member-name">parse</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/net/URL.html" title="class or interface in java.net" class="external-link">URL</a>&nbsp;url, int&nbsp;timeoutMillis)</span> throws <span class="exceptions"><a href="https://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class or interface in java.io" class="external-link">IOException</a></span> 
            </div> 
            <div class="block">
              Fetch a URL, and parse it as HTML. Provided for compatibility; in most cases use <a href="#connect(java.lang.String)"><code>connect(String)</code></a> instead. 
             <p> The encoding character set is determined by the content-type header or http-equiv meta tag, or falls back to <code>UTF-8</code>.</p> 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>url</code> - URL to fetch (with a GET). The protocol must be <code>http</code> or <code>https</code>. 
             </dd> 
             <dd> <code>timeoutMillis</code> - Connection and read timeout, in milliseconds. If exceeded, IOException is thrown. 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               The parsed HTML. 
             </dd> 
             <dt>
               Throws: 
             </dt> 
             <dd> <code><a href="https://docs.oracle.com/javase/7/docs/api/java/net/MalformedURLException.html" title="class or interface in java.net" class="external-link">MalformedURLException</a></code> - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed 
             </dd> 
             <dd> <code><a href="HttpStatusException.html" title="class in org.jsoup">HttpStatusException</a></code> - if the response is not OK and HTTP response errors are not ignored 
             </dd> 
             <dd> <code><a href="UnsupportedMimeTypeException.html" title="class in org.jsoup">UnsupportedMimeTypeException</a></code> - if the response mime type is not supported and those errors are not ignored 
             </dd> 
             <dd> <code><a href="https://docs.oracle.com/javase/7/docs/api/java/net/SocketTimeoutException.html" title="class or interface in java.net" class="external-link">SocketTimeoutException</a></code> - if the connection times out 
             </dd> 
             <dd> <code><a href="https://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class or interface in java.io" class="external-link">IOException</a></code> - if a connection or read error occurs 
             </dd> 
             <dt>
               See Also: 
             </dt> 
             <dd> <a href="#connect(java.lang.String)"><code>connect(String)</code></a> 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="clean(java.lang.String,java.lang.String,org.jsoup.safety.Safelist)"> 
            <h3>clean</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a></span>&nbsp;<span class="member-name">clean</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;bodyHtml, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;baseUri, <a href="safety/Safelist.html" title="class in org.jsoup.safety">Safelist</a>&nbsp;safelist)</span> 
            </div> 
            <div class="block">
              Get safe HTML from untrusted input HTML, by parsing input HTML and filtering it through an allow-list of safe tags and attributes. 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>bodyHtml</code> - input untrusted HTML (body fragment) 
             </dd> 
             <dd> <code>baseUri</code> - URL to resolve relative URLs against 
             </dd> 
             <dd> <code>safelist</code> - list of permitted HTML elements 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               safe HTML (body fragment) 
             </dd> 
             <dt>
               See Also: 
             </dt> 
             <dd> <a href="safety/Cleaner.html#clean(org.jsoup.nodes.Document)"><code>Cleaner.clean(Document)</code></a> 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="clean(java.lang.String,java.lang.String,org.jsoup.safety.Whitelist)"> 
            <h3>clean</h3> 
            <div class="member-signature"> <span class="annotations"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Deprecated.html" title="class or interface in java.lang" class="external-link">@Deprecated</a> </span><span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a></span>&nbsp;<span class="member-name">clean</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;bodyHtml, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;baseUri, <a href="safety/Whitelist.html" title="class in org.jsoup.safety">Whitelist</a>&nbsp;safelist)</span> 
            </div> 
            <div class="deprecation-block"> <span class="deprecated-label">Deprecated.</span> 
             <div class="deprecation-comment">
               as of 1.14.1. 
             </div> 
            </div> 
            <div class="block">
              Use <a href="#clean(java.lang.String,java.lang.String,org.jsoup.safety.Safelist)"><code>clean(String, String, Safelist)</code></a> instead. 
            </div> 
           </section> </li> 
          <li> 
           <section class="detail" id="clean(java.lang.String,org.jsoup.safety.Safelist)"> 
            <h3>clean</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a></span>&nbsp;<span class="member-name">clean</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;bodyHtml, <a href="safety/Safelist.html" title="class in org.jsoup.safety">Safelist</a>&nbsp;safelist)</span> 
            </div> 
            <div class="block">
              Get safe HTML from untrusted input HTML, by parsing input HTML and filtering it through a safe-list of permitted tags and attributes. 
             <p>Note that as this method does not take a base href URL to resolve attributes with relative URLs against, those URLs will be removed, unless the input HTML contains a <code>&lt;base href&gt; tag</code>. If you wish to preserve those, use the <a href="#clean(java.lang.String,java.lang.String,org.jsoup.safety.Safelist)"><code>clean(String html, String baseHref, Safelist)</code></a> method instead, and enable <a href="safety/Safelist.html#preserveRelativeLinks(boolean)"><code>Safelist.preserveRelativeLinks(boolean)</code></a>.</p> 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>bodyHtml</code> - input untrusted HTML (body fragment) 
             </dd> 
             <dd> <code>safelist</code> - list of permitted HTML elements 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               safe HTML (body fragment) 
             </dd> 
             <dt>
               See Also: 
             </dt> 
             <dd> <a href="safety/Cleaner.html#clean(org.jsoup.nodes.Document)"><code>Cleaner.clean(Document)</code></a> 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="clean(java.lang.String,org.jsoup.safety.Whitelist)"> 
            <h3>clean</h3> 
            <div class="member-signature"> <span class="annotations"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Deprecated.html" title="class or interface in java.lang" class="external-link">@Deprecated</a> </span><span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a></span>&nbsp;<span class="member-name">clean</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;bodyHtml, <a href="safety/Whitelist.html" title="class in org.jsoup.safety">Whitelist</a>&nbsp;safelist)</span> 
            </div> 
            <div class="deprecation-block"> <span class="deprecated-label">Deprecated.</span> 
             <div class="deprecation-comment">
               as of 1.14.1. 
             </div> 
            </div> 
            <div class="block">
              Use <a href="#clean(java.lang.String,org.jsoup.safety.Safelist)"><code>clean(String, Safelist)</code></a> instead. 
            </div> 
           </section> </li> 
          <li> 
           <section class="detail" id="clean(java.lang.String,java.lang.String,org.jsoup.safety.Safelist,org.jsoup.nodes.Document.OutputSettings)"> 
            <h3>clean</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a></span>&nbsp;<span class="member-name">clean</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;bodyHtml, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;baseUri, <a href="safety/Safelist.html" title="class in org.jsoup.safety">Safelist</a>&nbsp;safelist, <a href="nodes/Document.OutputSettings.html" title="class in org.jsoup.nodes">Document.OutputSettings</a>&nbsp;outputSettings)</span> 
            </div> 
            <div class="block">
              Get safe HTML from untrusted input HTML, by parsing input HTML and filtering it through a safe-list of permitted tags and attributes. 
             <p>The HTML is treated as a body fragment; it's expected the cleaned HTML will be used within the body of an existing document. If you want to clean full documents, use <a href="safety/Cleaner.html#clean(org.jsoup.nodes.Document)"><code>Cleaner.clean(Document)</code></a> instead, and add structural tags (<code>html, head, body</code> etc) to the safelist.</p> 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>bodyHtml</code> - input untrusted HTML (body fragment) 
             </dd> 
             <dd> <code>baseUri</code> - URL to resolve relative URLs against 
             </dd> 
             <dd> <code>safelist</code> - list of permitted HTML elements 
             </dd> 
             <dd> <code>outputSettings</code> - document output settings; use to control pretty-printing and entity escape modes 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               safe HTML (body fragment) 
             </dd> 
             <dt>
               See Also: 
             </dt> 
             <dd> <a href="safety/Cleaner.html#clean(org.jsoup.nodes.Document)"><code>Cleaner.clean(Document)</code></a> 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="clean(java.lang.String,java.lang.String,org.jsoup.safety.Whitelist,org.jsoup.nodes.Document.OutputSettings)"> 
            <h3>clean</h3> 
            <div class="member-signature"> <span class="annotations"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Deprecated.html" title="class or interface in java.lang" class="external-link">@Deprecated</a> </span><span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a></span>&nbsp;<span class="member-name">clean</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;bodyHtml, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;baseUri, <a href="safety/Whitelist.html" title="class in org.jsoup.safety">Whitelist</a>&nbsp;safelist, <a href="nodes/Document.OutputSettings.html" title="class in org.jsoup.nodes">Document.OutputSettings</a>&nbsp;outputSettings)</span> 
            </div> 
            <div class="deprecation-block"> <span class="deprecated-label">Deprecated.</span> 
             <div class="deprecation-comment">
               as of 1.14.1. 
             </div> 
            </div> 
            <div class="block">
              Use <a href="#clean(java.lang.String,java.lang.String,org.jsoup.safety.Safelist,org.jsoup.nodes.Document.OutputSettings)"><code>clean(String, String, Safelist, Document.OutputSettings)</code></a> instead. 
            </div> 
           </section> </li> 
          <li> 
           <section class="detail" id="isValid(java.lang.String,org.jsoup.safety.Safelist)"> 
            <h3>isValid</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type">boolean</span>&nbsp;<span class="member-name">isValid</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;bodyHtml, <a href="safety/Safelist.html" title="class in org.jsoup.safety">Safelist</a>&nbsp;safelist)</span> 
            </div> 
            <div class="block">
              Test if the input body HTML has only tags and attributes allowed by the Safelist. Useful for form validation. 
             <p>The input HTML should still be run through the cleaner to set up enforced attributes, and to tidy the output. </p> 
             <p>Assumes the HTML is a body fragment (i.e. will be used in an existing HTML document body.)</p> 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>bodyHtml</code> - HTML to test 
             </dd> 
             <dd> <code>safelist</code> - safelist to test against 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               true if no tags or attributes were removed; false otherwise 
             </dd> 
             <dt>
               See Also: 
             </dt> 
             <dd> <a href="#clean(java.lang.String,org.jsoup.safety.Safelist)"><code>clean(String, Safelist)</code></a> 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="isValid(java.lang.String,org.jsoup.safety.Whitelist)"> 
            <h3>isValid</h3> 
            <div class="member-signature"> <span class="annotations"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Deprecated.html" title="class or interface in java.lang" class="external-link">@Deprecated</a> </span><span class="modifiers">public static</span>&nbsp;<span class="return-type">boolean</span>&nbsp;<span class="member-name">isValid</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;bodyHtml, <a href="safety/Whitelist.html" title="class in org.jsoup.safety">Whitelist</a>&nbsp;safelist)</span> 
            </div> 
            <div class="deprecation-block"> <span class="deprecated-label">Deprecated.</span> 
             <div class="deprecation-comment">
               as of 1.14.1. 
             </div> 
            </div> 
            <div class="block">
              Use <a href="#isValid(java.lang.String,org.jsoup.safety.Safelist)"><code>isValid(String, Safelist)</code></a> instead. 
            </div> 
           </section> </li> 
         </ul> 
        </section> </li> 
      </ul> 
     </section> <!-- ========= END OF CLASS DATA ========= --> 
    </main> 
    <footer role="contentinfo"> 
     <nav role="navigation"> <!-- ======= START OF BOTTOM NAVBAR ====== --> 
      <div class="bottom-nav" id="navbar.bottom"> 
       <div class="skip-nav"> <a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a> 
       </div> 
       <ul id="navbar.bottom.firstrow" class="nav-list" title="Navigation"> 
        <li class="home"><a href="//jsoup.org/" title="jsoup, the HTML parser for Java">jsoup</a></li> 
        <li><a href="../../index.html">Overview</a></li> 
        <li><a href="package-summary.html">Package</a></li> 
        <li class="nav-bar-cell1-rev">Class</li> 
        <li><a href="class-use/Jsoup.html">Use</a></li> 
        <li><a href="package-tree.html">Tree</a></li> 
        <li><a href="../../deprecated-list.html">Deprecated</a></li> 
        <li><a href="../../index-all.html">Index</a></li> 
        <li><a href="../../help-doc.html">Help</a></li> 
       </ul> 
      </div> <!-- ======== END OF BOTTOM NAVBAR ======= --> <span class="skip-nav" id="skip.navbar.bottom"> <!--   --> </span> 
     </nav> 
     <p class="legal-copy"><small>Copyright © 2009–2021 <a href="https://jhy.io/">Jonathan Hedley</a>. All rights reserved.</small></p> 
    </footer> 
   </div> 
  </div> 
  <script>window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;ga('create','UA-89734-10','auto');ga('send', 'pageview');</script> 
  <script async src="https://www.google-analytics.com/analytics.js"></script>  
 </body>
</html>
ml" title="class in java.awt"><span class="strong">DefaultKeyboardFocusManager</span></a> 
         <ul> 
          <li type="circle">javax.swing.<a href="../../javax/swing/FocusManager.html" title="class in javax.swing"><span class="strong">FocusManager</span></a> 
           <ul> 
            <li type="circle">javax.swing.<a href="../../javax/swing/DefaultFocusManager.html" title="class in javax.swing"><span class="strong">DefaultFocusManager</span></a></li> 
           </ul> </li> 
         </ul> </li> 
       </ul> </li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/LayoutStyle.html" title="class in javax.swing"><span class="strong">LayoutStyle</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/LookAndFeel.html" title="class in javax.swing"><span class="strong">LookAndFeel</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/MenuSelectionManager.html" title="class in javax.swing"><span class="strong">MenuSelectionManager</span></a></li> 
      <li type="circle">java.awt.event.<a href="../../java/awt/event/MouseAdapter.html" title="class in java.awt.event"><span class="strong">MouseAdapter</span></a> (implements java.awt.event.<a href="../../java/awt/event/MouseListener.html" title="interface in java.awt.event">MouseListener</a>, java.awt.event.<a href="../../java/awt/event/MouseMotionListener.html" title="interface in java.awt.event">MouseMotionListener</a>, java.awt.event.<a href="../../java/awt/event/MouseWheelListener.html" title="interface in java.awt.event">MouseWheelListener</a>) 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/ToolTipManager.html" title="class in javax.swing"><span class="strong">ToolTipManager</span></a> (implements java.awt.event.<a href="../../java/awt/event/MouseMotionListener.html" title="interface in java.awt.event">MouseMotionListener</a>)</li> 
       </ul> </li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/OverlayLayout.html" title="class in javax.swing"><span class="strong">OverlayLayout</span></a> (implements java.awt.<a href="../../java/awt/LayoutManager2.html" title="interface in java.awt">LayoutManager2</a>, java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/Popup.html" title="class in javax.swing"><span class="strong">Popup</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/PopupFactory.html" title="class in javax.swing"><span class="strong">PopupFactory</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/ProgressMonitor.html" title="class in javax.swing"><span class="strong">ProgressMonitor</span></a> (implements javax.accessibility.<a href="../../javax/accessibility/Accessible.html" title="interface in javax.accessibility">Accessible</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/RepaintManager.html" title="class in javax.swing"><span class="strong">RepaintManager</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/RowFilter.html" title="class in javax.swing"><span class="strong">RowFilter</span></a>&lt;M,I&gt;</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/RowFilter.Entry.html" title="class in javax.swing"><span class="strong">RowFilter.Entry</span></a>&lt;M,I&gt;</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/RowSorter.html" title="class in javax.swing"><span class="strong">RowSorter</span></a>&lt;M&gt; 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/DefaultRowSorter.html" title="class in javax.swing"><span class="strong">DefaultRowSorter</span></a>&lt;M,I&gt;</li> 
       </ul> </li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/RowSorter.SortKey.html" title="class in javax.swing"><span class="strong">RowSorter.SortKey</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/ScrollPaneLayout.html" title="class in javax.swing"><span class="strong">ScrollPaneLayout</span></a> (implements java.awt.<a href="../../java/awt/LayoutManager.html" title="interface in java.awt">LayoutManager</a>, javax.swing.<a href="../../javax/swing/ScrollPaneConstants.html" title="interface in javax.swing">ScrollPaneConstants</a>, java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>) 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/ScrollPaneLayout.UIResource.html" title="class in javax.swing"><span class="strong">ScrollPaneLayout.UIResource</span></a> (implements javax.swing.plaf.<a href="../../javax/swing/plaf/UIResource.html" title="interface in javax.swing.plaf">UIResource</a>)</li> 
       </ul> </li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/SizeRequirements.html" title="class in javax.swing"><span class="strong">SizeRequirements</span></a> (implements java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/SizeSequence.html" title="class in javax.swing"><span class="strong">SizeSequence</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/Spring.html" title="class in javax.swing"><span class="strong">Spring</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/SpringLayout.html" title="class in javax.swing"><span class="strong">SpringLayout</span></a> (implements java.awt.<a href="../../java/awt/LayoutManager2.html" title="interface in java.awt">LayoutManager2</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/SpringLayout.Constraints.html" title="class in javax.swing"><span class="strong">SpringLayout.Constraints</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/SwingUtilities.html" title="class in javax.swing"><span class="strong">SwingUtilities</span></a> (implements javax.swing.<a href="../../javax/swing/SwingConstants.html" title="interface in javax.swing">SwingConstants</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/SwingWorker.html" title="class in javax.swing"><span class="strong">SwingWorker</span></a>&lt;T,V&gt; (implements java.util.concurrent.<a href="../../java/util/concurrent/RunnableFuture.html" title="interface in java.util.concurrent">RunnableFuture</a>&lt;V&gt;)</li> 
      <li type="circle">java.lang.<a href="../../java/lang/Throwable.html" title="class in java.lang"><span class="strong">Throwable</span></a> (implements java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>) 
       <ul> 
        <li type="circle">java.lang.<a href="../../java/lang/Exception.html" title="class in java.lang"><span class="strong">Exception</span></a> 
         <ul> 
          <li type="circle">javax.swing.<a href="../../javax/swing/UnsupportedLookAndFeelException.html" title="class in javax.swing"><span class="strong">UnsupportedLookAndFeelException</span></a></li> 
         </ul> </li> 
       </ul> </li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/Timer.html" title="class in javax.swing"><span class="strong">Timer</span></a> (implements java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/ToolTipManager.insideTimerAction.html" title="class in javax.swing"><span class="strong">ToolTipManager.insideTimerAction</span></a> (implements java.awt.event.<a href="../../java/awt/event/ActionListener.html" title="interface in java.awt.event">ActionListener</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/ToolTipManager.outsideTimerAction.html" title="class in javax.swing"><span class="strong">ToolTipManager.outsideTimerAction</span></a> (implements java.awt.event.<a href="../../java/awt/event/ActionListener.html" title="interface in java.awt.event">ActionListener</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/ToolTipManager.stillInsideTimerAction.html" title="class in javax.swing"><span class="strong">ToolTipManager.stillInsideTimerAction</span></a> (implements java.awt.event.<a href="../../java/awt/event/ActionListener.html" title="interface in java.awt.event">ActionListener</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/TransferHandler.html" title="class in javax.swing"><span class="strong">TransferHandler</span></a> (implements java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/TransferHandler.DropLocation.html" title="class in javax.swing"><span class="strong">TransferHandler.DropLocation</span></a> 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/JList.DropLocation.html" title="class in javax.swing"><span class="strong">JList.DropLocation</span></a></li> 
        <li type="circle">javax.swing.<a href="../../javax/swing/JTable.DropLocation.html" title="class in javax.swing"><span class="strong">JTable.DropLocation</span></a></li> 
        <li type="circle">javax.swing.<a href="../../javax/swing/JTree.DropLocation.html" title="class in javax.swing"><span class="strong">JTree.DropLocation</span></a></li> 
       </ul> </li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/TransferHandler.TransferSupport.html" title="class in javax.swing"><span class="strong">TransferHandler.TransferSupport</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/UIDefaults.LazyInputMap.html" title="class in javax.swing"><span class="strong">UIDefaults.LazyInputMap</span></a> (implements javax.swing.<a href="../../javax/swing/UIDefaults.LazyValue.html" title="interface in javax.swing">UIDefaults.LazyValue</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/UIDefaults.ProxyLazyValue.html" title="class in javax.swing"><span class="strong">UIDefaults.ProxyLazyValue</span></a> (implements javax.swing.<a href="../../javax/swing/UIDefaults.LazyValue.html" title="interface in javax.swing">UIDefaults.LazyValue</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/UIManager.html" title="class in javax.swing"><span class="strong">UIManager</span></a> (implements java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/UIManager.LookAndFeelInfo.html" title="class in javax.swing"><span class="strong">UIManager.LookAndFeelInfo</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/ViewportLayout.html" title="class in javax.swing"><span class="strong">ViewportLayout</span></a> (implements java.awt.<a href="../../java/awt/LayoutManager.html" title="interface in java.awt">LayoutManager</a>, java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
      <li type="circle">java.awt.event.<a href="../../java/awt/event/WindowAdapter.html" title="class in java.awt.event"><span class="strong">WindowAdapter</span></a> (implements java.awt.event.<a href="../../java/awt/event/WindowFocusListener.html" title="interface in java.awt.event">WindowFocusListener</a>, java.awt.event.<a href="../../java/awt/event/WindowListener.html" title="interface in java.awt.event">WindowListener</a>, java.awt.event.<a href="../../java/awt/event/WindowStateListener.html" title="interface in java.awt.event">WindowStateListener</a>) 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/JMenu.WinListener.html" title="class in javax.swing"><span class="strong">JMenu.WinListener</span></a> (implements java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
       </ul> </li> 
     </ul> </li> 
   </ul> 
   <h2 title="Interface Hierarchy">Interface Hierarchy</h2> 
   <ul> 
    <li type="circle">javax.swing.<a href="../../javax/swing/BoundedRangeModel.html" title="interface in javax.swing"><span class="strong">BoundedRangeModel</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/CellEditor.html" title="interface in javax.swing"><span class="strong">CellEditor</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/ComboBoxEditor.html" title="interface in javax.swing"><span class="strong">ComboBoxEditor</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/DesktopManager.html" title="interface in javax.swing"><span class="strong">DesktopManager</span></a></li> 
    <li type="circle">java.util.<a href="../../java/util/EventListener.html" title="interface in java.util"><span class="strong">EventListener</span></a> 
     <ul> 
      <li type="circle">java.awt.event.<a href="../../java/awt/event/ActionListener.html" title="interface in java.awt.event"><span class="strong">ActionListener</span></a> 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/Action.html" title="interface in javax.swing"><span class="strong">Action</span></a></li> 
       </ul> </li> 
     </ul> </li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/Icon.html" title="interface in javax.swing"><span class="strong">Icon</span></a></li> 
    <li type="circle">java.awt.<a href="../../java/awt/ItemSelectable.html" title="interface in java.awt"><span class="strong">ItemSelectable</span></a> 
     <ul> 
      <li type="circle">javax.swing.<a href="../../javax/swing/ButtonModel.html" title="interface in javax.swing"><span class="strong">ButtonModel</span></a></li> 
     </ul> </li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/JComboBox.KeySelectionManager.html" title="interface in javax.swing"><span class="strong">JComboBox.KeySelectionManager</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/ListCellRenderer.html" title="interface in javax.swing"><span class="strong">ListCellRenderer</span></a>&lt;E&gt;</li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/ListModel.html" title="interface in javax.swing"><span class="strong">ListModel</span></a>&lt;E&gt; 
     <ul> 
      <li type="circle">javax.swing.<a href="../../javax/swing/ComboBoxModel.html" title="interface in javax.swing"><span class="strong">ComboBoxModel</span></a>&lt;E&gt; 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/MutableComboBoxModel.html" title="interface in javax.swing"><span class="strong">MutableComboBoxModel</span></a>&lt;E&gt;</li> 
       </ul> </li> 
     </ul> </li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/ListSelectionModel.html" title="interface in javax.swing"><span class="strong">ListSelectionModel</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/MenuElement.html" title="interface in javax.swing"><span class="strong">MenuElement</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/Painter.html" title="interface in javax.swing"><span class="strong">Painter</span></a>&lt;T&gt;</li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/Renderer.html" title="interface in javax.swing"><span class="strong">Renderer</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/RootPaneContainer.html" title="interface in javax.swing"><span class="strong">RootPaneContainer</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/Scrollable.html" title="interface in javax.swing"><span class="strong">Scrollable</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/ScrollPaneConstants.html" title="interface in javax.swing"><span class="strong">ScrollPaneConstants</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/SingleSelectionModel.html" title="interface in javax.swing"><span class="strong">SingleSelectionModel</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/SpinnerModel.html" title="interface in javax.swing"><span class="strong">SpinnerModel</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/SwingConstants.html" title="interface in javax.swing"><span class="strong">SwingConstants</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/UIDefaults.ActiveValue.html" title="interface in javax.swing"><span class="strong">UIDefaults.ActiveValue</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/UIDefaults.LazyValue.html" title="interface in javax.swing"><span class="strong">UIDefaults.LazyValue</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/WindowConstants.html" title="interface in javax.swing"><span class="strong">WindowConstants</span></a></li> 
   </ul> 
   <h2 title="Enum Hierarchy">Enum Hierarchy</h2> 
   <ul> 
    <li type="circle">java.lang.<a href="../../java/lang/Object.html" title="class in java.lang"><span class="strong">Object</span></a> 
     <ul> 
      <li type="circle">java.lang.<a href="../../java/lang/Enum.html" title="class in java.lang"><span class="strong">Enum</span></a>&lt;E&gt; (implements java.lang.<a href="../../java/lang/Comparable.html" title="interface in java.lang">Comparable</a>&lt;T&gt;, java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>) 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/GroupLayout.Alignment.html" title="enum in javax.swing"><span class="strong">GroupLayout.Alignment</span></a></li> 
        <li type="circle">javax.swing.<a href="../../javax/swing/SortOrder.html" title="enum in javax.swing"><span class="strong">SortOrder</span></a></li> 
        <li type="circle">javax.swing.<a href="../../javax/swing/SwingWorker.StateValue.html" title="enum in javax.swing"><span class="strong">SwingWorker.StateValue</span></a></li> 
        <li type="circle">javax.swing.<a href="../../javax/swing/DropMode.html" title="enum in javax.swing"><span class="strong">DropMode</span></a></li> 
        <li type="circle">javax.swing.<a href="../../javax/swing/LayoutStyle.ComponentPlacement.html" title="enum in javax.swing"><span class="strong">LayoutStyle.ComponentPlacement</span></a></li> 
        <li type="circle">javax.swing.<a href="../../javax/swing/RowFilter.ComparisonType.html" title="enum in javax.swing"><span class="strong">RowFilter.ComparisonType</span></a></li> 
        <li type="circle">javax.swing.<a href="../../javax/swing/JTable.PrintMode.html" title="enum in javax.swing"><span class="strong">JTable.PrintMode</span></a></li> 
       </ul> </li> 
     </ul> </li> 
   </ul> 
  </div> <!-- ======= START OF BOTTOM NAVBAR ====== --> 
  <div class="bottomNav">
   <a name="navbar_bottom"> <!--   --> </a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow"> <!--   --> </a> 
   <ul class="navList" title="Navigation"> 
    <li><a href="../../overview-summary.html">Overview</a></li> 
    <li><a href="package-summary.html">Package</a></li> 
    <li>Class</li> 
    <li>Use</li> 
    <li class="navBarCell1Rev">Tree</li> 
    <li><a href="../../deprecated-list.html">Deprecated</a></li> 
    <li><a href="../../index-files/index-1.html">Index</a></li> 
    <li><a href="../../help-doc.html">Help</a></li> 
   </ul> 
   <div class="aboutLanguage">
    <em><strong>Java™&nbsp;Platform<br>Standard&nbsp;Ed.&nbsp;7</strong></em>
   </div> 
  </div> 
  <div class="subNav"> 
   <ul class="navList"> 
    <li><a href="../../javax/sql/rowset/spi/package-tree.html">Prev</a></li> 
    <li><a href="../../javax/swing/border/package-tree.html">Next</a></li> 
   </ul> 
   <ul class="navList"> 
    <li><a href="../../index.html?javax/swing/package-tree.html" target="_top">Frames</a></li> 
    <li><a href="package-tree.html" target="_top">No Frames</a></li> 
   </ul> 
   <ul class="navList" id="allclasses_navbar_bottom"> 
    <li><a href="../../allclasses-noframe.html">All Classes</a></li> 
   </ul> 
   <div> 
    <script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script> 
   </div> <a name="skip-navbar_bottom"> <!--   --> </a>
  </div> <!-- ======== END OF BOTTOM NAVBAR ======= --> 
  <p class="legalCopy"><small><font size="-1"> <a href="http://bugreport.sun.com/bugreport/">Submit a bug or feature</a> <br>For further API reference and developer documentation, see <a href="http://docs.oracle.com/javase/7/docs/index.html" target="_blank">Java SE Documentation</a>. That documentation contains more detailed, developer-targeted descriptions, with conceptual overviews, definitions of terms, workarounds, and working code examples.<br> <a href="../../../legal/cpyr.html">Copyright</a> © 1993, 2020, Oracle and/or its affiliates. All rights reserved. Use is subject to <a href="http://download.oracle.com/otndocs/jcp/java_se-7-mrel-spec/license.html">license terms</a>. Also see the <a target="_blank" href="http://www.oracle.com/technetwork/java/redist-137594.html">documentation redistribution policy</a>. </font></small></p> <!-- Start SiteCatalyst code   --> 
  <script type="application/javascript" src="https://www.oracleimg.com/us/assets/metrics/ora_docs.js"></script> <!-- End SiteCatalyst code --> 
  <noscript> 
   <p>Scripting on this page tracks web page traffic, but does not change the content in any way.</p> 
  </noscript>  
 </body>
</html>
