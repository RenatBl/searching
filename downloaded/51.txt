<!doctype html><!-- NewPage -->
<html lang="en"> 
 <head> 
  <title>Safelist (jsoup Java HTML Parser 1.14.3 API)</title> 
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> 
  <meta name="dc.created" content="2021-10-01"> 
  <meta name="description" content="declaration: package: org.jsoup.safety, class: Safelist"> 
  <meta name="generator" content="javadoc/ClassWriterImpl"> 
  <link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style"> 
  <meta name="viewport" content="width=device-width, initial-scale=1"> 
 </head> 
 <body class="class-declaration-page"> 
  <div class="flex-box"> 
   <header role="banner" class="flex-header"> 
    <nav role="navigation"> <!-- ========= START OF TOP NAVBAR ======= --> 
     <div class="top-nav" id="navbar.top"> 
      <div class="skip-nav"> <a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a> 
      </div> 
      <ul id="navbar.top.firstrow" class="nav-list" title="Navigation"> 
       <li class="home"><a href="//jsoup.org/" title="jsoup, the HTML parser for Java">jsoup</a></li> 
       <li><a href="../../../index.html">Overview</a></li> 
       <li><a href="package-summary.html">Package</a></li> 
       <li class="nav-bar-cell1-rev">Class</li> 
       <li><a href="class-use/Safelist.html">Use</a></li> 
       <li><a href="package-tree.html">Tree</a></li> 
       <li><a href="../../../deprecated-list.html">Deprecated</a></li> 
       <li><a href="../../../index-all.html">Index</a></li> 
       <li><a href="../../../help-doc.html">Help</a></li> 
      </ul> 
     </div> <!-- ========= END OF TOP NAVBAR ========= --> <span class="skip-nav" id="skip.navbar.top"> <!--   --> </span> 
    </nav> 
   </header> 
   <div class="flex-content"> 
    <main role="main"> <!-- ======== START OF CLASS DATA ======== --> 
     <div class="header"> 
      <div class="sub-title"> <span class="package-label-in-type">Package</span>&nbsp;<a href="package-summary.html">org.jsoup.safety</a> 
      </div> 
      <h1 title="Class Safelist" class="title">Class Safelist</h1> 
     </div> 
     <div class="inheritance" title="Inheritance Tree"> <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html" title="class or interface in java.lang" class="external-link">java.lang.Object</a> 
      <div class="inheritance">
        org.jsoup.safety.Safelist 
      </div> 
     </div> 
     <section class="description"> 
      <dl class="notes"> 
       <dt>
         Direct Known Subclasses: 
       </dt> 
       <dd> <code><a href="Whitelist.html" title="class in org.jsoup.safety">Whitelist</a></code> 
       </dd> 
      </dl> 
      <hr> 
      <pre>public class <span class="type-name-label">Safelist</span>
extends <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html" title="class or interface in java.lang" class="external-link">Object</a></pre> 
      <div class="block">
        Safe-lists define what HTML (elements and attributes) to allow through the cleaner. Everything else is removed. 
       <p> Start with one of the defaults: </p> 
       <ul> 
        <li><a href="#none()"><code>none()</code></a> </li> 
        <li><a href="#simpleText()"><code>simpleText()</code></a> </li> 
        <li><a href="#basic()"><code>basic()</code></a> </li> 
        <li><a href="#basicWithImages()"><code>basicWithImages()</code></a> </li> 
        <li><a href="#relaxed()"><code>relaxed()</code></a> </li> 
       </ul> 
       <p> If you need to allow more through (please be careful!), tweak a base safelist with: </p> 
       <ul> 
        <li><a href="#addTags(java.lang.String...)"><code>addTags(String... tagNames)</code></a> </li> 
        <li><a href="#addAttributes(java.lang.String,java.lang.String...)"><code>addAttributes(String tagName, String... attributes)</code></a> </li> 
        <li><a href="#addEnforcedAttribute(java.lang.String,java.lang.String,java.lang.String)"><code>addEnforcedAttribute(String tagName, String attribute, String value)</code></a> </li> 
        <li><a href="#addProtocols(java.lang.String,java.lang.String,java.lang.String...)"><code>addProtocols(String tagName, String attribute, String... protocols)</code></a> </li> 
       </ul> 
       <p> You can remove any setting from an existing safelist with: </p> 
       <ul> 
        <li><a href="#removeTags(java.lang.String...)"><code>removeTags(String... tagNames)</code></a> </li> 
        <li><a href="#removeAttributes(java.lang.String,java.lang.String...)"><code>removeAttributes(String tagName, String... attributes)</code></a> </li> 
        <li><a href="#removeEnforcedAttribute(java.lang.String,java.lang.String)"><code>removeEnforcedAttribute(String tagName, String attribute)</code></a> </li> 
        <li><a href="#removeProtocols(java.lang.String,java.lang.String,java.lang.String...)"><code>removeProtocols(String tagName, String attribute, String... removeProtocols)</code></a> </li> 
       </ul> 
       <p> The cleaner and these safelists assume that you want to clean a <code>body</code> fragment of HTML (to add user supplied HTML into a templated page), and not to clean a full HTML document. If the latter is the case, either wrap the document HTML around the cleaned body HTML, or create a safelist that allows <code>html</code> and <code>head</code> elements as appropriate. </p> 
       <p> If you are going to extend a safelist, please be very careful. Make sure you understand what attributes may lead to XSS attack vectors. URL attributes are particularly vulnerable and require careful validation. See the <a href="https://owasp.org/www-community/xss-filter-evasion-cheatsheet">XSS Filter Evasion Cheat Sheet</a> for some XSS attack examples (that jsoup will safegaurd against the default Cleaner and Safelist configuration). </p> 
      </div> 
     </section> 
     <section class="summary"> 
      <ul class="summary-list"> <!-- ======== CONSTRUCTOR SUMMARY ======== --> 
       <li> 
        <section class="constructor-summary" id="constructor.summary"> 
         <h2>Constructor Summary</h2> 
         <div class="member-summary"> 
          <table class="summary-table"> 
           <caption> <span>Constructors</span> 
           </caption> 
           <thead> 
            <tr> 
             <th class="col-first" scope="col">Constructor</th> 
             <th class="col-last" scope="col">Description</th> 
            </tr> 
           </thead> 
           <tbody> 
            <tr class="alt-color"> 
             <th class="col-constructor-name" scope="row"><code><span class="member-name-link"><a href="#%3Cinit%3E()">Safelist</a></span>()</code></th> 
             <td class="col-last"> 
              <div class="block">
                Create a new, empty safelist. 
              </div> </td> 
            </tr> 
            <tr class="row-color"> 
             <th class="col-constructor-name" scope="row"><code><span class="member-name-link"><a href="#%3Cinit%3E(org.jsoup.safety.Safelist)">Safelist</a></span>​(<a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a>&nbsp;copy)</code></th> 
             <td class="col-last"> 
              <div class="block">
                Deep copy an existing Safelist to a new Safelist. 
              </div> </td> 
            </tr> 
           </tbody> 
          </table> 
         </div> 
        </section> </li> <!-- ========== METHOD SUMMARY =========== --> 
       <li> 
        <section class="method-summary" id="method.summary"> 
         <h2>Method Summary</h2> 
         <div class="member-summary" id="method-summary-table"> 
          <div id="method-summary-table.tabpanel" role="tabpanel"> 
           <table class="summary-table" aria-labelledby="t0"> 
            <thead> 
             <tr> 
              <th class="col-first" scope="col">Modifier and Type</th> 
              <th class="col-second" scope="col">Method</th> 
              <th class="col-last" scope="col">Description</th> 
             </tr> 
            </thead> 
            <tbody> 
             <tr class="alt-color" id="i0"> 
              <td class="col-first"><code><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#addAttributes(java.lang.String,java.lang.String...)">addAttributes</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;tag, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>...&nbsp;attributes)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Add a list of allowed attributes to a tag. 
               </div> </td> 
             </tr> 
             <tr class="row-color" id="i1"> 
              <td class="col-first"><code><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#addEnforcedAttribute(java.lang.String,java.lang.String,java.lang.String)">addEnforcedAttribute</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;tag, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;attribute, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;value)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Add an enforced attribute to a tag. 
               </div> </td> 
             </tr> 
             <tr class="alt-color" id="i2"> 
              <td class="col-first"><code><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#addProtocols(java.lang.String,java.lang.String,java.lang.String...)">addProtocols</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;tag, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;attribute, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>...&nbsp;protocols)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Add allowed URL protocols for an element's URL attribute. 
               </div> </td> 
             </tr> 
             <tr class="row-color" id="i3"> 
              <td class="col-first"><code><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#addTags(java.lang.String...)">addTags</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>...&nbsp;tags)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Add a list of allowed elements to a safelist. 
               </div> </td> 
             </tr> 
             <tr class="alt-color" id="i4"> 
              <td class="col-first"><code>static <a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#basic()">basic</a></span>()</code></th> 
              <td class="col-last"> 
               <div class="block">
                 This safelist allows a fuller range of text nodes: <code>a, b, blockquote, br, cite, code, dd, dl, dt, em, i, li, ol, p, pre, q, small, span, strike, strong, sub, sup, u, ul</code>, and appropriate attributes. 
               </div> </td> 
             </tr> 
             <tr class="row-color" id="i5"> 
              <td class="col-first"><code>static <a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#basicWithImages()">basicWithImages</a></span>()</code></th> 
              <td class="col-last"> 
               <div class="block">
                 This safelist allows the same text tags as <a href="#basic()"><code>basic()</code></a>, and also allows <code>img</code> tags, with appropriate attributes, with <code>src</code> pointing to <code>http</code> or <code>https</code>. 
               </div> </td> 
             </tr> 
             <tr class="alt-color" id="i6"> 
              <td class="col-first"><code>protected boolean</code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute)">isSafeAttribute</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;tagName, <a href="../nodes/Element.html" title="class in org.jsoup.nodes">Element</a>&nbsp;el, <a href="../nodes/Attribute.html" title="class in org.jsoup.nodes">Attribute</a>&nbsp;attr)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Test if the supplied attribute is allowed by this safelist for this tag 
               </div> </td> 
             </tr> 
             <tr class="row-color" id="i7"> 
              <td class="col-first"><code>protected boolean</code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#isSafeTag(java.lang.String)">isSafeTag</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;tag)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Test if the supplied tag is allowed by this safelist 
               </div> </td> 
             </tr> 
             <tr class="alt-color" id="i8"> 
              <td class="col-first"><code>static <a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#none()">none</a></span>()</code></th> 
              <td class="col-last"> 
               <div class="block">
                 This safelist allows only text nodes: all HTML will be stripped. 
               </div> </td> 
             </tr> 
             <tr class="row-color" id="i9"> 
              <td class="col-first"><code><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#preserveRelativeLinks(boolean)">preserveRelativeLinks</a></span>​(boolean&nbsp;preserve)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Configure this Safelist to preserve relative links in an element's URL attribute, or convert them to absolute links. 
               </div> </td> 
             </tr> 
             <tr class="alt-color" id="i10"> 
              <td class="col-first"><code>static <a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#relaxed()">relaxed</a></span>()</code></th> 
              <td class="col-last"> 
               <div class="block">
                 This safelist allows a full range of text and structural body HTML: <code>a, b, blockquote, br, caption, cite, code, col, colgroup, dd, div, dl, dt, em, h1, h2, h3, h4, h5, h6, i, img, li, ol, p, pre, q, small, span, strike, strong, sub, sup, table, tbody, td, tfoot, th, thead, tr, u, ul</code> 
               </div> </td> 
             </tr> 
             <tr class="row-color" id="i11"> 
              <td class="col-first"><code><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#removeAttributes(java.lang.String,java.lang.String...)">removeAttributes</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;tag, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>...&nbsp;attributes)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Remove a list of allowed attributes from a tag. 
               </div> </td> 
             </tr> 
             <tr class="alt-color" id="i12"> 
              <td class="col-first"><code><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#removeEnforcedAttribute(java.lang.String,java.lang.String)">removeEnforcedAttribute</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;tag, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;attribute)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Remove a previously configured enforced attribute from a tag. 
               </div> </td> 
             </tr> 
             <tr class="row-color" id="i13"> 
              <td class="col-first"><code><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#removeProtocols(java.lang.String,java.lang.String,java.lang.String...)">removeProtocols</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;tag, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;attribute, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>...&nbsp;removeProtocols)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Remove allowed URL protocols for an element's URL attribute. 
               </div> </td> 
             </tr> 
             <tr class="alt-color" id="i14"> 
              <td class="col-first"><code><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#removeTags(java.lang.String...)">removeTags</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>...&nbsp;tags)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Remove a list of allowed elements from a safelist. 
               </div> </td> 
             </tr> 
             <tr class="row-color" id="i15"> 
              <td class="col-first"><code>static <a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#simpleText()">simpleText</a></span>()</code></th> 
              <td class="col-last"> 
               <div class="block">
                 This safelist allows only simple text formatting: <code>b, em, i, strong, u</code>. 
               </div> </td> 
             </tr> 
            </tbody> 
           </table> 
          </div> 
         </div> 
         <div class="inherited-list"> 
          <h3 id="methods.inherited.from.class.java.lang.Object">Methods inherited from class&nbsp;java.lang.<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html" title="class or interface in java.lang" class="external-link">Object</a></h3> <code><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#clone()" title="class or interface in java.lang" class="external-link">clone</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#equals(java.lang.Object)" title="class or interface in java.lang" class="external-link">equals</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#finalize()" title="class or interface in java.lang" class="external-link">finalize</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#getClass()" title="class or interface in java.lang" class="external-link">getClass</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#hashCode()" title="class or interface in java.lang" class="external-link">hashCode</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#notify()" title="class or interface in java.lang" class="external-link">notify</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#notifyAll()" title="class or interface in java.lang" class="external-link">notifyAll</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#toString()" title="class or interface in java.lang" class="external-link">toString</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#wait()" title="class or interface in java.lang" class="external-link">wait</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#wait(long)" title="class or interface in java.lang" class="external-link">wait</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#wait(long,int)" title="class or interface in java.lang" class="external-link">wait</a></code> 
         </div> 
        </section> </li> 
      </ul> 
     </section> 
     <section class="details"> 
      <ul class="details-list"> <!-- ========= CONSTRUCTOR DETAIL ======== --> 
       <li> 
        <section class="constructor-details" id="constructor.detail"> 
         <h2>Constructor Details</h2> 
         <ul class="member-list"> 
          <li> 
           <section class="detail" id="<init>()"> 
            <h3>Safelist</h3> 
            <div class="member-signature"> <span class="modifiers">public</span>&nbsp;<span class="member-name">Safelist</span>() 
            </div> 
            <div class="block">
              Create a new, empty safelist. Generally it will be better to start with a default prepared safelist instead. 
            </div> 
            <dl class="notes"> 
             <dt>
               See Also: 
             </dt> 
             <dd> <a href="#basic()"><code>basic()</code></a>, <a href="#basicWithImages()"><code>basicWithImages()</code></a>, <a href="#simpleText()"><code>simpleText()</code></a>, <a href="#relaxed()"><code>relaxed()</code></a> 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="<init>(org.jsoup.safety.Safelist)"> 
            <h3>Safelist</h3> 
            <div class="member-signature"> <span class="modifiers">public</span>&nbsp;<span class="member-name">Safelist</span>​(<span class="parameters"><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a>&nbsp;copy)</span> 
            </div> 
            <div class="block">
              Deep copy an existing Safelist to a new Safelist. 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>copy</code> - the Safelist to copy 
             </dd> 
            </dl> 
           </section> </li> 
         </ul> 
        </section> </li> <!-- ============ METHOD DETAIL ========== --> 
       <li> 
        <section class="method-details" id="method.detail"> 
         <h2>Method Details</h2> 
         <ul class="member-list"> 
          <li> 
           <section class="detail" id="none()"> 
            <h3>none</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></span>&nbsp;<span class="member-name">none</span>() 
            </div> 
            <div class="block">
              This safelist allows only text nodes: all HTML will be stripped. 
            </div> 
            <dl class="notes"> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               safelist 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="simpleText()"> 
            <h3>simpleText</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></span>&nbsp;<span class="member-name">simpleText</span>() 
            </div> 
            <div class="block">
              This safelist allows only simple text formatting: <code>b, em, i, strong, u</code>. All other HTML (tags and attributes) will be removed. 
            </div> 
            <dl class="notes"> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               safelist 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="basic()"> 
            <h3>basic</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></span>&nbsp;<span class="member-name">basic</span>() 
            </div> 
            <div class="block"> 
             <p> This safelist allows a fuller range of text nodes: <code>a, b, blockquote, br, cite, code, dd, dl, dt, em, i, li, ol, p, pre, q, small, span, strike, strong, sub, sup, u, ul</code>, and appropriate attributes. </p> 
             <p> Links (<code>a</code> elements) can point to <code>http, https, ftp, mailto</code>, and have an enforced <code>rel=nofollow</code> attribute. </p> 
             <p> Does not allow images. </p> 
            </div> 
            <dl class="notes"> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               safelist 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="basicWithImages()"> 
            <h3>basicWithImages</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></span>&nbsp;<span class="member-name">basicWithImages</span>() 
            </div> 
            <div class="block">
              This safelist allows the same text tags as <a href="#basic()"><code>basic()</code></a>, and also allows <code>img</code> tags, with appropriate attributes, with <code>src</code> pointing to <code>http</code> or <code>https</code>. 
            </div> 
            <dl class="notes"> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               safelist 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="relaxed()"> 
            <h3>relaxed</h3> 
            <div class="member-signature"> <span class="modifiers">public static</span>&nbsp;<span class="return-type"><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></span>&nbsp;<span class="member-name">relaxed</span>() 
            </div> 
            <div class="block">
              This safelist allows a full range of text and structural body HTML: <code>a, b, blockquote, br, caption, cite, code, col, colgroup, dd, div, dl, dt, em, h1, h2, h3, h4, h5, h6, i, img, li, ol, p, pre, q, small, span, strike, strong, sub, sup, table, tbody, td, tfoot, th, thead, tr, u, ul</code> 
             <p> Links do not have an enforced <code>rel=nofollow</code> attribute, but you can add that if desired. </p> 
            </div> 
            <dl class="notes"> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               safelist 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="addTags(java.lang.String...)"> 
            <h3>addTags</h3> 
            <div class="member-signature"> <span class="modifiers">public</span>&nbsp;<span class="return-type"><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></span>&nbsp;<span class="member-name">addTags</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>...&nbsp;tags)</span> 
            </div> 
            <div class="block">
              Add a list of allowed elements to a safelist. (If a tag is not allowed, it will be removed from the HTML.) 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>tags</code> - tag names to allow 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               this (for chaining) 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="removeTags(java.lang.String...)"> 
            <h3>removeTags</h3> 
            <div class="member-signature"> <span class="modifiers">public</span>&nbsp;<span class="return-type"><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></span>&nbsp;<span class="member-name">removeTags</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>...&nbsp;tags)</span> 
            </div> 
            <div class="block">
              Remove a list of allowed elements from a safelist. (If a tag is not allowed, it will be removed from the HTML.) 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>tags</code> - tag names to disallow 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               this (for chaining) 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="addAttributes(java.lang.String,java.lang.String...)"> 
            <h3>addAttributes</h3> 
            <div class="member-signature"> <span class="modifiers">public</span>&nbsp;<span class="return-type"><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></span>&nbsp;<span class="member-name">addAttributes</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;tag, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>...&nbsp;attributes)</span> 
            </div> 
            <div class="block">
              Add a list of allowed attributes to a tag. (If an attribute is not allowed on an element, it will be removed.) 
             <p> E.g.: <code>addAttributes("a", "href", "class")</code> allows <code>href</code> and <code>class</code> attributes on <code>a</code> tags. </p> 
             <p> To make an attribute valid for <b>all tags</b>, use the pseudo tag <code>:all</code>, e.g. <code>addAttributes(":all", "class")</code>. </p> 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>tag</code> - The tag the attributes are for. The tag will be added to the allowed tag list if necessary. 
             </dd> 
             <dd> <code>attributes</code> - List of valid attributes for the tag 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               this (for chaining) 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="removeAttributes(java.lang.String,java.lang.String...)"> 
            <h3>removeAttributes</h3> 
            <div class="member-signature"> <span class="modifiers">public</span>&nbsp;<span class="return-type"><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></span>&nbsp;<span class="member-name">removeAttributes</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;tag, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>...&nbsp;attributes)</span> 
            </div> 
            <div class="block">
              Remove a list of allowed attributes from a tag. (If an attribute is not allowed on an element, it will be removed.) 
             <p> E.g.: <code>removeAttributes("a", "href", "class")</code> disallows <code>href</code> and <code>class</code> attributes on <code>a</code> tags. </p> 
             <p> To make an attribute invalid for <b>all tags</b>, use the pseudo tag <code>:all</code>, e.g. <code>removeAttributes(":all", "class")</code>. </p> 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>tag</code> - The tag the attributes are for. 
             </dd> 
             <dd> <code>attributes</code> - List of invalid attributes for the tag 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               this (for chaining) 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="addEnforcedAttribute(java.lang.String,java.lang.String,java.lang.String)"> 
            <h3>addEnforcedAttribute</h3> 
            <div class="member-signature"> <span class="modifiers">public</span>&nbsp;<span class="return-type"><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></span>&nbsp;<span class="member-name">addEnforcedAttribute</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;tag, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;attribute, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;value)</span> 
            </div> 
            <div class="block">
              Add an enforced attribute to a tag. An enforced attribute will always be added to the element. If the element already has the attribute set, it will be overridden with this value. 
             <p> E.g.: <code>addEnforcedAttribute("a", "rel", "nofollow")</code> will make all <code>a</code> tags output as <code>&lt;a href="..." rel="nofollow"&gt;</code> </p> 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>tag</code> - The tag the enforced attribute is for. The tag will be added to the allowed tag list if necessary. 
             </dd> 
             <dd> <code>attribute</code> - The attribute name 
             </dd> 
             <dd> <code>value</code> - The enforced attribute value 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               this (for chaining) 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="removeEnforcedAttribute(java.lang.String,java.lang.String)"> 
            <h3>removeEnforcedAttribute</h3> 
            <div class="member-signature"> <span class="modifiers">public</span>&nbsp;<span class="return-type"><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></span>&nbsp;<span class="member-name">removeEnforcedAttribute</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;tag, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;attribute)</span> 
            </div> 
            <div class="block">
              Remove a previously configured enforced attribute from a tag. 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>tag</code> - The tag the enforced attribute is for. 
             </dd> 
             <dd> <code>attribute</code> - The attribute name 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               this (for chaining) 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="preserveRelativeLinks(boolean)"> 
            <h3>preserveRelativeLinks</h3> 
            <div class="member-signature"> <span class="modifiers">public</span>&nbsp;<span class="return-type"><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></span>&nbsp;<span class="member-name">preserveRelativeLinks</span>​(<span class="parameters">boolean&nbsp;preserve)</span> 
            </div> 
            <div class="block">
              Configure this Safelist to preserve relative links in an element's URL attribute, or convert them to absolute links. By default, this is <b>false</b>: URLs will be made absolute (e.g. start with an allowed protocol, like e.g. <code>http://</code>. 
             <p> Note that when handling relative links, the input document must have an appropriate <code>base URI</code> set when parsing, so that the link's protocol can be confirmed. Regardless of the setting of the <code>preserve relative links</code> option, the link must be resolvable against the base URI to an allowed protocol; otherwise the attribute will be removed. </p> 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>preserve</code> - <code>true</code> to allow relative links, <code>false</code> (default) to deny 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               this Safelist, for chaining. 
             </dd> 
             <dt>
               See Also: 
             </dt> 
             <dd> <a href="#addProtocols(java.lang.String,java.lang.String,java.lang.String...)"><code>addProtocols(java.lang.String, java.lang.String, java.lang.String...)</code></a> 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="addProtocols(java.lang.String,java.lang.String,java.lang.String...)"> 
            <h3>addProtocols</h3> 
            <div class="member-signature"> <span class="modifiers">public</span>&nbsp;<span class="return-type"><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></span>&nbsp;<span class="member-name">addProtocols</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;tag, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;attribute, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>...&nbsp;protocols)</span> 
            </div> 
            <div class="block">
              Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to URLs with the defined protocol. 
             <p> E.g.: <code>addProtocols("a", "href", "ftp", "http", "https")</code> </p> 
             <p> To allow a link to an in-page URL anchor (i.e. <code>&lt;a href="#anchor"&gt;</code>, add a <code>#</code>:<br> E.g.: <code>addProtocols("a", "href", "#")</code> </p> 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>tag</code> - Tag the URL protocol is for 
             </dd> 
             <dd> <code>attribute</code> - Attribute name 
             </dd> 
             <dd> <code>protocols</code> - List of valid protocols 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               this, for chaining 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="removeProtocols(java.lang.String,java.lang.String,java.lang.String...)"> 
            <h3>removeProtocols</h3> 
            <div class="member-signature"> <span class="modifiers">public</span>&nbsp;<span class="return-type"><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a></span>&nbsp;<span class="member-name">removeProtocols</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;tag, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;attribute, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>...&nbsp;removeProtocols)</span> 
            </div> 
            <div class="block">
              Remove allowed URL protocols for an element's URL attribute. If you remove all protocols for an attribute, that attribute will allow any protocol. 
             <p> E.g.: <code>removeProtocols("a", "href", "ftp")</code> </p> 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>tag</code> - Tag the URL protocol is for 
             </dd> 
             <dd> <code>attribute</code> - Attribute name 
             </dd> 
             <dd> <code>removeProtocols</code> - List of invalid protocols 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               this, for chaining 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="isSafeTag(java.lang.String)"> 
            <h3>isSafeTag</h3> 
            <div class="member-signature"> <span class="modifiers">protected</span>&nbsp;<span class="return-type">boolean</span>&nbsp;<span class="member-name">isSafeTag</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;tag)</span> 
            </div> 
            <div class="block">
              Test if the supplied tag is allowed by this safelist 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>tag</code> - test tag 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               true if allowed 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute)"> 
            <h3>isSafeAttribute</h3> 
            <div class="member-signature"> <span class="modifiers">protected</span>&nbsp;<span class="return-type">boolean</span>&nbsp;<span class="member-name">isSafeAttribute</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;tagName, <a href="../nodes/Element.html" title="class in org.jsoup.nodes">Element</a>&nbsp;el, <a href="../nodes/Attribute.html" title="class in org.jsoup.nodes">Attribute</a>&nbsp;attr)</span> 
            </div> 
            <div class="block">
              Test if the supplied attribute is allowed by this safelist for this tag 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>tagName</code> - tag to consider allowing the attribute in 
             </dd> 
             <dd> <code>el</code> - element under test, to confirm protocol 
             </dd> 
             <dd> <code>attr</code> - attribute under test 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               true if allowed 
             </dd> 
            </dl> 
           </section> </li> 
         </ul> 
        </section> </li> 
      </ul> 
     </section> <!-- ========= END OF CLASS DATA ========= --> 
    </main> 
    <footer role="contentinfo"> 
     <nav role="navigation"> <!-- ======= START OF BOTTOM NAVBAR ====== --> 
      <div class="bottom-nav" id="navbar.bottom"> 
       <div class="skip-nav"> <a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a> 
       </div> 
       <ul id="navbar.bottom.firstrow" class="nav-list" title="Navigation"> 
        <li class="home"><a href="//jsoup.org/" title="jsoup, the HTML parser for Java">jsoup</a></li> 
        <li><a href="../../../index.html">Overview</a></li> 
        <li><a href="package-summary.html">Package</a></li> 
        <li class="nav-bar-cell1-rev">Class</li> 
        <li><a href="class-use/Safelist.html">Use</a></li> 
        <li><a href="package-tree.html">Tree</a></li> 
        <li><a href="../../../deprecated-list.html">Deprecated</a></li> 
        <li><a href="../../../index-all.html">Index</a></li> 
        <li><a href="../../../help-doc.html">Help</a></li> 
       </ul> 
      </div> <!-- ======== END OF BOTTOM NAVBAR ======= --> <span class="skip-nav" id="skip.navbar.bottom"> <!--   --> </span> 
     </nav> 
     <p class="legal-copy"><small>Copyright © 2009–2021 <a href="https://jhy.io/">Jonathan Hedley</a>. All rights reserved.</small></p> 
    </footer> 
   </div> 
  </div> 
  <script>window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;ga('create','UA-89734-10','auto');ga('send', 'pageview');</script> 
  <script async src="https://www.google-analytics.com/analytics.js"></script>  
 </body>
</html>
 href="../../javax/swing/JToolBar.Separator.html" title="class in javax.swing"><span class="strong">JToolBar.Separator</span></a></li> 
             </ul> </li> 
            <li type="circle">javax.swing.<a href="../../javax/swing/JSlider.html" title="class in javax.swing"><span class="strong">JSlider</span></a> (implements javax.accessibility.<a href="../../javax/accessibility/Accessible.html" title="interface in javax.accessibility">Accessible</a>, javax.swing.<a href="../../javax/swing/SwingConstants.html" title="interface in javax.swing">SwingConstants</a>)</li> 
            <li type="circle">javax.swing.<a href="../../javax/swing/JSpinner.html" title="class in javax.swing"><span class="strong">JSpinner</span></a> (implements javax.accessibility.<a href="../../javax/accessibility/Accessible.html" title="interface in javax.accessibility">Accessible</a>)</li> 
            <li type="circle">javax.swing.<a href="../../javax/swing/JSplitPane.html" title="class in javax.swing"><span class="strong">JSplitPane</span></a> (implements javax.accessibility.<a href="../../javax/accessibility/Accessible.html" title="interface in javax.accessibility">Accessible</a>)</li> 
            <li type="circle">javax.swing.<a href="../../javax/swing/JTabbedPane.html" title="class in javax.swing"><span class="strong">JTabbedPane</span></a> (implements javax.accessibility.<a href="../../javax/accessibility/Accessible.html" title="interface in javax.accessibility">Accessible</a>, java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, javax.swing.<a href="../../javax/swing/SwingConstants.html" title="interface in javax.swing">SwingConstants</a>)</li> 
            <li type="circle">javax.swing.<a href="../../javax/swing/JTable.html" title="class in javax.swing"><span class="strong">JTable</span></a> (implements javax.accessibility.<a href="../../javax/accessibility/Accessible.html" title="interface in javax.accessibility">Accessible</a>, javax.swing.event.<a href="../../javax/swing/event/CellEditorListener.html" title="interface in javax.swing.event">CellEditorListener</a>, javax.swing.event.<a href="../../javax/swing/event/ListSelectionListener.html" title="interface in javax.swing.event">ListSelectionListener</a>, javax.swing.event.<a href="../../javax/swing/event/RowSorterListener.html" title="interface in javax.swing.event">RowSorterListener</a>, javax.swing.<a href="../../javax/swing/Scrollable.html" title="interface in javax.swing">Scrollable</a>, javax.swing.event.<a href="../../javax/swing/event/TableColumnModelListener.html" title="interface in javax.swing.event">TableColumnModelListener</a>, javax.swing.event.<a href="../../javax/swing/event/TableModelListener.html" title="interface in javax.swing.event">TableModelListener</a>)</li> 
            <li type="circle">javax.swing.text.<a href="../../javax/swing/text/JTextComponent.html" title="class in javax.swing.text"><span class="strong">JTextComponent</span></a> (implements javax.accessibility.<a href="../../javax/accessibility/Accessible.html" title="interface in javax.accessibility">Accessible</a>, javax.swing.<a href="../../javax/swing/Scrollable.html" title="interface in javax.swing">Scrollable</a>) 
             <ul> 
              <li type="circle">javax.swing.<a href="../../javax/swing/JEditorPane.html" title="class in javax.swing"><span class="strong">JEditorPane</span></a> 
               <ul> 
                <li type="circle">javax.swing.<a href="../../javax/swing/JTextPane.html" title="class in javax.swing"><span class="strong">JTextPane</span></a></li> 
               </ul> </li> 
              <li type="circle">javax.swing.<a href="../../javax/swing/JTextArea.html" title="class in javax.swing"><span class="strong">JTextArea</span></a></li> 
              <li type="circle">javax.swing.<a href="../../javax/swing/JTextField.html" title="class in javax.swing"><span class="strong">JTextField</span></a> (implements javax.swing.<a href="../../javax/swing/SwingConstants.html" title="interface in javax.swing">SwingConstants</a>) 
               <ul> 
                <li type="circle">javax.swing.<a href="../../javax/swing/JFormattedTextField.html" title="class in javax.swing"><span class="strong">JFormattedTextField</span></a></li> 
                <li type="circle">javax.swing.<a href="../../javax/swing/JPasswordField.html" title="class in javax.swing"><span class="strong">JPasswordField</span></a></li> 
               </ul> </li> 
             </ul> </li> 
            <li type="circle">javax.swing.<a href="../../javax/swing/JToolBar.html" title="class in javax.swing"><span class="strong">JToolBar</span></a> (implements javax.accessibility.<a href="../../javax/accessibility/Accessible.html" title="interface in javax.accessibility">Accessible</a>, javax.swing.<a href="../../javax/swing/SwingConstants.html" title="interface in javax.swing">SwingConstants</a>)</li> 
            <li type="circle">javax.swing.<a href="../../javax/swing/JToolTip.html" title="class in javax.swing"><span class="strong">JToolTip</span></a> (implements javax.accessibility.<a href="../../javax/accessibility/Accessible.html" title="interface in javax.accessibility">Accessible</a>)</li> 
            <li type="circle">javax.swing.<a href="../../javax/swing/JTree.html" title="class in javax.swing"><span class="strong">JTree</span></a> (implements javax.accessibility.<a href="../../javax/accessibility/Accessible.html" title="interface in javax.accessibility">Accessible</a>, javax.swing.<a href="../../javax/swing/Scrollable.html" title="interface in javax.swing">Scrollable</a>)</li> 
            <li type="circle">javax.swing.<a href="../../javax/swing/JViewport.html" title="class in javax.swing"><span class="strong">JViewport</span></a> (implements javax.accessibility.<a href="../../javax/accessibility/Accessible.html" title="interface in javax.accessibility">Accessible</a>)</li> 
           </ul> </li> 
          <li type="circle">java.awt.<a href="../../java/awt/Panel.html" title="class in java.awt"><span class="strong">Panel</span></a> (implements javax.accessibility.<a href="../../javax/accessibility/Accessible.html" title="interface in javax.accessibility">Accessible</a>) 
           <ul> 
            <li type="circle">java.applet.<a href="../../java/applet/Applet.html" title="class in java.applet"><span class="strong">Applet</span></a> 
             <ul> 
              <li type="circle">javax.swing.<a href="../../javax/swing/JApplet.html" title="class in javax.swing"><span class="strong">JApplet</span></a> (implements javax.accessibility.<a href="../../javax/accessibility/Accessible.html" title="interface in javax.accessibility">Accessible</a>, javax.swing.<a href="../../javax/swing/RootPaneContainer.html" title="interface in javax.swing">RootPaneContainer</a>)</li> 
             </ul> </li> 
           </ul> </li> 
          <li type="circle">java.awt.<a href="../../java/awt/Window.html" title="class in java.awt"><span class="strong">Window</span></a> (implements javax.accessibility.<a href="../../javax/accessibility/Accessible.html" title="interface in javax.accessibility">Accessible</a>) 
           <ul> 
            <li type="circle">java.awt.<a href="../../java/awt/Dialog.html" title="class in java.awt"><span class="strong">Dialog</span></a> 
             <ul> 
              <li type="circle">javax.swing.<a href="../../javax/swing/JDialog.html" title="class in javax.swing"><span class="strong">JDialog</span></a> (implements javax.accessibility.<a href="../../javax/accessibility/Accessible.html" title="interface in javax.accessibility">Accessible</a>, javax.swing.<a href="../../javax/swing/RootPaneContainer.html" title="interface in javax.swing">RootPaneContainer</a>, javax.swing.<a href="../../javax/swing/WindowConstants.html" title="interface in javax.swing">WindowConstants</a>)</li> 
             </ul> </li> 
            <li type="circle">java.awt.<a href="../../java/awt/Frame.html" title="class in java.awt"><span class="strong">Frame</span></a> (implements java.awt.<a href="../../java/awt/MenuContainer.html" title="interface in java.awt">MenuContainer</a>) 
             <ul> 
              <li type="circle">javax.swing.<a href="../../javax/swing/JFrame.html" title="class in javax.swing"><span class="strong">JFrame</span></a> (implements javax.accessibility.<a href="../../javax/accessibility/Accessible.html" title="interface in javax.accessibility">Accessible</a>, javax.swing.<a href="../../javax/swing/RootPaneContainer.html" title="interface in javax.swing">RootPaneContainer</a>, javax.swing.<a href="../../javax/swing/WindowConstants.html" title="interface in javax.swing">WindowConstants</a>)</li> 
             </ul> </li> 
            <li type="circle">javax.swing.<a href="../../javax/swing/JWindow.html" title="class in javax.swing"><span class="strong">JWindow</span></a> (implements javax.accessibility.<a href="../../javax/accessibility/Accessible.html" title="interface in javax.accessibility">Accessible</a>, javax.swing.<a href="../../javax/swing/RootPaneContainer.html" title="interface in javax.swing">RootPaneContainer</a>)</li> 
           </ul> </li> 
         </ul> </li> 
       </ul> </li> 
      <li type="circle">java.awt.event.<a href="../../java/awt/event/ComponentAdapter.html" title="class in java.awt.event"><span class="strong">ComponentAdapter</span></a> (implements java.awt.event.<a href="../../java/awt/event/ComponentListener.html" title="interface in java.awt.event">ComponentListener</a>) 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/JViewport.ViewListener.html" title="class in javax.swing"><span class="strong">JViewport.ViewListener</span></a> (implements java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
       </ul> </li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/DefaultBoundedRangeModel.html" title="class in javax.swing"><span class="strong">DefaultBoundedRangeModel</span></a> (implements javax.swing.<a href="../../javax/swing/BoundedRangeModel.html" title="interface in javax.swing">BoundedRangeModel</a>, java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/DefaultButtonModel.html" title="class in javax.swing"><span class="strong">DefaultButtonModel</span></a> (implements javax.swing.<a href="../../javax/swing/ButtonModel.html" title="interface in javax.swing">ButtonModel</a>, java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>) 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/JToggleButton.ToggleButtonModel.html" title="class in javax.swing"><span class="strong">JToggleButton.ToggleButtonModel</span></a></li> 
       </ul> </li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/DefaultCellEditor.EditorDelegate.html" title="class in javax.swing"><span class="strong">DefaultCellEditor.EditorDelegate</span></a> (implements java.awt.event.<a href="../../java/awt/event/ActionListener.html" title="interface in java.awt.event">ActionListener</a>, java.awt.event.<a href="../../java/awt/event/ItemListener.html" title="interface in java.awt.event">ItemListener</a>, java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/DefaultDesktopManager.html" title="class in javax.swing"><span class="strong">DefaultDesktopManager</span></a> (implements javax.swing.<a href="../../javax/swing/DesktopManager.html" title="interface in javax.swing">DesktopManager</a>, java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/DefaultListSelectionModel.html" title="class in javax.swing"><span class="strong">DefaultListSelectionModel</span></a> (implements java.lang.<a href="../../java/lang/Cloneable.html" title="interface in java.lang">Cloneable</a>, javax.swing.<a href="../../javax/swing/ListSelectionModel.html" title="interface in javax.swing">ListSelectionModel</a>, java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
      <li type="circle">javax.swing.tree.<a href="../../javax/swing/tree/DefaultMutableTreeNode.html" title="class in javax.swing.tree"><span class="strong">DefaultMutableTreeNode</span></a> (implements java.lang.<a href="../../java/lang/Cloneable.html" title="interface in java.lang">Cloneable</a>, javax.swing.tree.<a href="../../javax/swing/tree/MutableTreeNode.html" title="interface in javax.swing.tree">MutableTreeNode</a>, java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>) 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/JTree.DynamicUtilTreeNode.html" title="class in javax.swing"><span class="strong">JTree.DynamicUtilTreeNode</span></a></li> 
       </ul> </li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/DefaultRowSorter.ModelWrapper.html" title="class in javax.swing"><span class="strong">DefaultRowSorter.ModelWrapper</span></a>&lt;M,I&gt;</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/DefaultSingleSelectionModel.html" title="class in javax.swing"><span class="strong">DefaultSingleSelectionModel</span></a> (implements java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, javax.swing.<a href="../../javax/swing/SingleSelectionModel.html" title="interface in javax.swing">SingleSelectionModel</a>)</li> 
      <li type="circle">javax.swing.tree.<a href="../../javax/swing/tree/DefaultTreeSelectionModel.html" title="class in javax.swing.tree"><span class="strong">DefaultTreeSelectionModel</span></a> (implements java.lang.<a href="../../java/lang/Cloneable.html" title="interface in java.lang">Cloneable</a>, java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, javax.swing.tree.<a href="../../javax/swing/tree/TreeSelectionModel.html" title="interface in javax.swing.tree">TreeSelectionModel</a>) 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/JTree.EmptySelectionModel.html" title="class in javax.swing"><span class="strong">JTree.EmptySelectionModel</span></a></li> 
       </ul> </li> 
      <li type="circle">java.util.<a href="../../java/util/Dictionary.html" title="class in java.util"><span class="strong">Dictionary</span></a>&lt;K,V&gt; 
       <ul> 
        <li type="circle">java.util.<a href="../../java/util/Hashtable.html" title="class in java.util"><span class="strong">Hashtable</span></a>&lt;K,V&gt; (implements java.lang.<a href="../../java/lang/Cloneable.html" title="interface in java.lang">Cloneable</a>, java.util.<a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;K,V&gt;, java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>) 
         <ul> 
          <li type="circle">javax.swing.<a href="../../javax/swing/UIDefaults.html" title="class in javax.swing"><span class="strong">UIDefaults</span></a></li> 
         </ul> </li> 
       </ul> </li> 
      <li type="circle">java.awt.<a href="../../java/awt/FocusTraversalPolicy.html" title="class in java.awt"><span class="strong">FocusTraversalPolicy</span></a> 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/InternalFrameFocusTraversalPolicy.html" title="class in javax.swing"><span class="strong">InternalFrameFocusTraversalPolicy</span></a> 
         <ul> 
          <li type="circle">javax.swing.<a href="../../javax/swing/SortingFocusTraversalPolicy.html" title="class in javax.swing"><span class="strong">SortingFocusTraversalPolicy</span></a> 
           <ul> 
            <li type="circle">javax.swing.<a href="../../javax/swing/LayoutFocusTraversalPolicy.html" title="class in javax.swing"><span class="strong">LayoutFocusTraversalPolicy</span></a> (implements java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
           </ul> </li> 
         </ul> </li> 
       </ul> </li> 
      <li type="circle">java.awt.<a href="../../java/awt/Graphics.html" title="class in java.awt"><span class="strong">Graphics</span></a> 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/DebugGraphics.html" title="class in javax.swing"><span class="strong">DebugGraphics</span></a></li> 
       </ul> </li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/GroupLayout.html" title="class in javax.swing"><span class="strong">GroupLayout</span></a> (implements java.awt.<a href="../../java/awt/LayoutManager2.html" title="interface in java.awt">LayoutManager2</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/GroupLayout.Group.html" title="class in javax.swing"><span class="strong">GroupLayout.Group</span></a> 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/GroupLayout.ParallelGroup.html" title="class in javax.swing"><span class="strong">GroupLayout.ParallelGroup</span></a></li> 
        <li type="circle">javax.swing.<a href="../../javax/swing/GroupLayout.SequentialGroup.html" title="class in javax.swing"><span class="strong">GroupLayout.SequentialGroup</span></a></li> 
       </ul> </li> 
      <li type="circle">java.awt.image.<a href="../../java/awt/image/ImageFilter.html" title="class in java.awt.image"><span class="strong">ImageFilter</span></a> (implements java.lang.<a href="../../java/lang/Cloneable.html" title="interface in java.lang">Cloneable</a>, java.awt.image.<a href="../../java/awt/image/ImageConsumer.html" title="interface in java.awt.image">ImageConsumer</a>) 
       <ul> 
        <li type="circle">java.awt.image.<a href="../../java/awt/image/RGBImageFilter.html" title="class in java.awt.image"><span class="strong">RGBImageFilter</span></a> 
         <ul> 
          <li type="circle">javax.swing.<a href="../../javax/swing/GrayFilter.html" title="class in javax.swing"><span class="strong">GrayFilter</span></a></li> 
         </ul> </li> 
       </ul> </li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/ImageIcon.html" title="class in javax.swing"><span class="strong">ImageIcon</span></a> (implements javax.accessibility.<a href="../../javax/accessibility/Accessible.html" title="interface in javax.accessibility">Accessible</a>, javax.swing.<a href="../../javax/swing/Icon.html" title="interface in javax.swing">Icon</a>, java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/InputMap.html" title="class in javax.swing"><span class="strong">InputMap</span></a> (implements java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>) 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/ComponentInputMap.html" title="class in javax.swing"><span class="strong">ComponentInputMap</span></a></li> 
       </ul> </li> 
      <li type="circle">java.io.<a href="../../java/io/InputStream.html" title="class in java.io"><span class="strong">InputStream</span></a> (implements java.io.<a href="../../java/io/Closeable.html" title="interface in java.io">Closeable</a>) 
       <ul> 
        <li type="circle">java.io.<a href="../../java/io/FilterInputStream.html" title="class in java.io"><span class="strong">FilterInputStream</span></a> 
         <ul> 
          <li type="circle">javax.swing.<a href="../../javax/swing/ProgressMonitorInputStream.html" title="class in javax.swing"><span class="strong">ProgressMonitorInputStream</span></a></li> 
         </ul> </li> 
       </ul> </li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/InputVerifier.html" title="class in javax.swing"><span class="strong">InputVerifier</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/JComponent.AccessibleJComponent.AccessibleContainerHandler.html" title="class in javax.swing"><span class="strong">JComponent.AccessibleJComponent.AccessibleContainerHandler</span></a> (implements java.awt.event.<a href="../../java/awt/event/ContainerListener.html" title="interface in java.awt.event">ContainerListener</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/JComponent.AccessibleJComponent.AccessibleFocusHandler.html" title="class in javax.swing"><span class="strong">JComponent.AccessibleJComponent.AccessibleFocusHandler</span></a> (implements java.awt.event.<a href="../../java/awt/event/FocusListener.html" title="interface in java.awt.event">FocusListener</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/JFormattedTextField.AbstractFormatter.html" title="class in javax.swing"><span class="strong">JFormattedTextField.AbstractFormatter</span></a> (implements java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/JFormattedTextField.AbstractFormatterFactory.html" title="class in javax.swing"><span class="strong">JFormattedTextField.AbstractFormatterFactory</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/JRootPane.RootLayout.html" title="class in javax.swing"><span class="strong">JRootPane.RootLayout</span></a> (implements java.awt.<a href="../../java/awt/LayoutManager2.html" title="interface in java.awt">LayoutManager2</a>, java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/JTabbedPane.ModelListener.html" title="class in javax.swing"><span class="strong">JTabbedPane.ModelListener</span></a> (implements javax.swing.event.<a href="../../javax/swing/event/ChangeListener.html" title="interface in javax.swing.event">ChangeListener</a>, java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/JTable.AccessibleJTable.AccessibleJTableModelChange.html" title="class in javax.swing"><span class="strong">JTable.AccessibleJTable.AccessibleJTableModelChange</span></a> (implements javax.accessibility.<a href="../../javax/accessibility/AccessibleTableModelChange.html" title="interface in javax.accessibility">AccessibleTableModelChange</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/JTree.TreeModelHandler.html" title="class in javax.swing"><span class="strong">JTree.TreeModelHandler</span></a> (implements javax.swing.event.<a href="../../javax/swing/event/TreeModelListener.html" title="interface in javax.swing.event">TreeModelListener</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/JTree.TreeSelectionRedirector.html" title="class in javax.swing"><span class="strong">JTree.TreeSelectionRedirector</span></a> (implements java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, javax.swing.event.<a href="../../javax/swing/event/TreeSelectionListener.html" title="interface in javax.swing.event">TreeSelectionListener</a>)</li> 
      <li type="circle">java.awt.<a href="../../java/awt/KeyboardFocusManager.html" title="class in java.awt"><span class="strong">KeyboardFocusManager</span></a> (implements java.awt.<a href="../../java/awt/KeyEventDispatcher.html" title="interface in java.awt">KeyEventDispatcher</a>, java.awt.<a href="../../java/awt/KeyEventPostProcessor.html" title="interface in java.awt">KeyEventPostProcessor</a>) 
       <ul> 
        <li type="circle">java.awt.<a href="../../java/awt/DefaultKeyboardFocusManager.html" title="class in java.awt"><span class="strong">DefaultKeyboardFocusManager</span></a> 
         <ul> 
          <li type="circle">javax.swing.<a href="../../javax/swing/FocusManager.html" title="class in javax.swing"><span class="strong">FocusManager</span></a> 
           <ul> 
            <li type="circle">javax.swing.<a href="../../javax/swing/DefaultFocusManager.html" title="class in javax.swing"><span class="strong">DefaultFocusManager</span></a></li> 
           </ul> </li> 
         </ul> </li> 
       </ul> </li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/LayoutStyle.html" title="class in javax.swing"><span class="strong">LayoutStyle</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/LookAndFeel.html" title="class in javax.swing"><span class="strong">LookAndFeel</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/MenuSelectionManager.html" title="class in javax.swing"><span class="strong">MenuSelectionManager</span></a></li> 
      <li type="circle">java.awt.event.<a href="../../java/awt/event/MouseAdapter.html" title="class in java.awt.event"><span class="strong">MouseAdapter</span></a> (implements java.awt.event.<a href="../../java/awt/event/MouseListener.html" title="interface in java.awt.event">MouseListener</a>, java.awt.event.<a href="../../java/awt/event/MouseMotionListener.html" title="interface in java.awt.event">MouseMotionListener</a>, java.awt.event.<a href="../../java/awt/event/MouseWheelListener.html" title="interface in java.awt.event">MouseWheelListener</a>) 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/ToolTipManager.html" title="class in javax.swing"><span class="strong">ToolTipManager</span></a> (implements java.awt.event.<a href="../../java/awt/event/MouseMotionListener.html" title="interface in java.awt.event">MouseMotionListener</a>)</li> 
       </ul> </li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/OverlayLayout.html" title="class in javax.swing"><span class="strong">OverlayLayout</span></a> (implements java.awt.<a href="../../java/awt/LayoutManager2.html" title="interface in java.awt">LayoutManager2</a>, java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/Popup.html" title="class in javax.swing"><span class="strong">Popup</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/PopupFactory.html" title="class in javax.swing"><span class="strong">PopupFactory</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/ProgressMonitor.html" title="class in javax.swing"><span class="strong">ProgressMonitor</span></a> (implements javax.accessibility.<a href="../../javax/accessibility/Accessible.html" title="interface in javax.accessibility">Accessible</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/RepaintManager.html" title="class in javax.swing"><span class="strong">RepaintManager</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/RowFilter.html" title="class in javax.swing"><span class="strong">RowFilter</span></a>&lt;M,I&gt;</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/RowFilter.Entry.html" title="class in javax.swing"><span class="strong">RowFilter.Entry</span></a>&lt;M,I&gt;</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/RowSorter.html" title="class in javax.swing"><span class="strong">RowSorter</span></a>&lt;M&gt; 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/DefaultRowSorter.html" title="class in javax.swing"><span class="strong">DefaultRowSorter</span></a>&lt;M,I&gt;</li> 
       </ul> </li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/RowSorter.SortKey.html" title="class in javax.swing"><span class="strong">RowSorter.SortKey</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/ScrollPaneLayout.html" title="class in javax.swing"><span class="strong">ScrollPaneLayout</span></a> (implements java.awt.<a href="../../java/awt/LayoutManager.html" title="interface in java.awt">LayoutManager</a>, javax.swing.<a href="../../javax/swing/ScrollPaneConstants.html" title="interface in javax.swing">ScrollPaneConstants</a>, java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>) 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/ScrollPaneLayout.UIResource.html" title="class in javax.swing"><span class="strong">ScrollPaneLayout.UIResource</span></a> (implements javax.swing.plaf.<a href="../../javax/swing/plaf/UIResource.html" title="interface in javax.swing.plaf">UIResource</a>)</li> 
       </ul> </li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/SizeRequirements.html" title="class in javax.swing"><span class="strong">SizeRequirements</span></a> (implements java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/SizeSequence.html" title="class in javax.swing"><span class="strong">SizeSequence</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/Spring.html" title="class in javax.swing"><span class="strong">Spring</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/SpringLayout.html" title="class in javax.swing"><span class="strong">SpringLayout</span></a> (implements java.awt.<a href="../../java/awt/LayoutManager2.html" title="interface in java.awt">LayoutManager2</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/SpringLayout.Constraints.html" title="class in javax.swing"><span class="strong">SpringLayout.Constraints</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/SwingUtilities.html" title="class in javax.swing"><span class="strong">SwingUtilities</span></a> (implements javax.swing.<a href="../../javax/swing/SwingConstants.html" title="interface in javax.swing">SwingConstants</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/SwingWorker.html" title="class in javax.swing"><span class="strong">SwingWorker</span></a>&lt;T,V&gt; (implements java.util.concurrent.<a href="../../java/util/concurrent/RunnableFuture.html" title="interface in java.util.concurrent">RunnableFuture</a>&lt;V&gt;)</li> 
      <li type="circle">java.lang.<a href="../../java/lang/Throwable.html" title="class in java.lang"><span class="strong">Throwable</span></a> (implements java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>) 
       <ul> 
        <li type="circle">java.lang.<a href="../../java/lang/Exception.html" title="class in java.lang"><span class="strong">Exception</span></a> 
         <ul> 
          <li type="circle">javax.swing.<a href="../../javax/swing/UnsupportedLookAndFeelException.html" title="class in javax.swing"><span class="strong">UnsupportedLookAndFeelException</span></a></li> 
         </ul> </li> 
       </ul> </li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/Timer.html" title="class in javax.swing"><span class="strong">Timer</span></a> (implements java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/ToolTipManager.insideTimerAction.html" title="class in javax.swing"><span class="strong">ToolTipManager.insideTimerAction</span></a> (implements java.awt.event.<a href="../../java/awt/event/ActionListener.html" title="interface in java.awt.event">ActionListener</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/ToolTipManager.outsideTimerAction.html" title="class in javax.swing"><span class="strong">ToolTipManager.outsideTimerAction</span></a> (implements java.awt.event.<a href="../../java/awt/event/ActionListener.html" title="interface in java.awt.event">ActionListener</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/ToolTipManager.stillInsideTimerAction.html" title="class in javax.swing"><span class="strong">ToolTipManager.stillInsideTimerAction</span></a> (implements java.awt.event.<a href="../../java/awt/event/ActionListener.html" title="interface in java.awt.event">ActionListener</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/TransferHandler.html" title="class in javax.swing"><span class="strong">TransferHandler</span></a> (implements java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/TransferHandler.DropLocation.html" title="class in javax.swing"><span class="strong">TransferHandler.DropLocation</span></a> 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/JList.DropLocation.html" title="class in javax.swing"><span class="strong">JList.DropLocation</span></a></li> 
        <li type="circle">javax.swing.<a href="../../javax/swing/JTable.DropLocation.html" title="class in javax.swing"><span class="strong">JTable.DropLocation</span></a></li> 
        <li type="circle">javax.swing.<a href="../../javax/swing/JTree.DropLocation.html" title="class in javax.swing"><span class="strong">JTree.DropLocation</span></a></li> 
       </ul> </li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/TransferHandler.TransferSupport.html" title="class in javax.swing"><span class="strong">TransferHandler.TransferSupport</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/UIDefaults.LazyInputMap.html" title="class in javax.swing"><span class="strong">UIDefaults.LazyInputMap</span></a> (implements javax.swing.<a href="../../javax/swing/UIDefaults.LazyValue.html" title="interface in javax.swing">UIDefaults.LazyValue</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/UIDefaults.ProxyLazyValue.html" title="class in javax.swing"><span class="strong">UIDefaults.ProxyLazyValue</span></a> (implements javax.swing.<a href="../../javax/swing/UIDefaults.LazyValue.html" title="interface in javax.swing">UIDefaults.LazyValue</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/UIManager.html" title="class in javax.swing"><span class="strong">UIManager</span></a> (implements java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/UIManager.LookAndFeelInfo.html" title="class in javax.swing"><span class="strong">UIManager.LookAndFeelInfo</span></a></li> 
      <li type="circle">javax.swing.<a href="../../javax/swing/ViewportLayout.html" title="class in javax.swing"><span class="strong">ViewportLayout</span></a> (implements java.awt.<a href="../../java/awt/LayoutManager.html" title="interface in java.awt">LayoutManager</a>, java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
      <li type="circle">java.awt.event.<a href="../../java/awt/event/WindowAdapter.html" title="class in java.awt.event"><span class="strong">WindowAdapter</span></a> (implements java.awt.event.<a href="../../java/awt/event/WindowFocusListener.html" title="interface in java.awt.event">WindowFocusListener</a>, java.awt.event.<a href="../../java/awt/event/WindowListener.html" title="interface in java.awt.event">WindowListener</a>, java.awt.event.<a href="../../java/awt/event/WindowStateListener.html" title="interface in java.awt.event">WindowStateListener</a>) 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/JMenu.WinListener.html" title="class in javax.swing"><span class="strong">JMenu.WinListener</span></a> (implements java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>)</li> 
       </ul> </li> 
     </ul> </li> 
   </ul> 
   <h2 title="Interface Hierarchy">Interface Hierarchy</h2> 
   <ul> 
    <li type="circle">javax.swing.<a href="../../javax/swing/BoundedRangeModel.html" title="interface in javax.swing"><span class="strong">BoundedRangeModel</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/CellEditor.html" title="interface in javax.swing"><span class="strong">CellEditor</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/ComboBoxEditor.html" title="interface in javax.swing"><span class="strong">ComboBoxEditor</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/DesktopManager.html" title="interface in javax.swing"><span class="strong">DesktopManager</span></a></li> 
    <li type="circle">java.util.<a href="../../java/util/EventListener.html" title="interface in java.util"><span class="strong">EventListener</span></a> 
     <ul> 
      <li type="circle">java.awt.event.<a href="../../java/awt/event/ActionListener.html" title="interface in java.awt.event"><span class="strong">ActionListener</span></a> 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/Action.html" title="interface in javax.swing"><span class="strong">Action</span></a></li> 
       </ul> </li> 
     </ul> </li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/Icon.html" title="interface in javax.swing"><span class="strong">Icon</span></a></li> 
    <li type="circle">java.awt.<a href="../../java/awt/ItemSelectable.html" title="interface in java.awt"><span class="strong">ItemSelectable</span></a> 
     <ul> 
      <li type="circle">javax.swing.<a href="../../javax/swing/ButtonModel.html" title="interface in javax.swing"><span class="strong">ButtonModel</span></a></li> 
     </ul> </li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/JComboBox.KeySelectionManager.html" title="interface in javax.swing"><span class="strong">JComboBox.KeySelectionManager</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/ListCellRenderer.html" title="interface in javax.swing"><span class="strong">ListCellRenderer</span></a>&lt;E&gt;</li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/ListModel.html" title="interface in javax.swing"><span class="strong">ListModel</span></a>&lt;E&gt; 
     <ul> 
      <li type="circle">javax.swing.<a href="../../javax/swing/ComboBoxModel.html" title="interface in javax.swing"><span class="strong">ComboBoxModel</span></a>&lt;E&gt; 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/MutableComboBoxModel.html" title="interface in javax.swing"><span class="strong">MutableComboBoxModel</span></a>&lt;E&gt;</li> 
       </ul> </li> 
     </ul> </li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/ListSelectionModel.html" title="interface in javax.swing"><span class="strong">ListSelectionModel</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/MenuElement.html" title="interface in javax.swing"><span class="strong">MenuElement</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/Painter.html" title="interface in javax.swing"><span class="strong">Painter</span></a>&lt;T&gt;</li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/Renderer.html" title="interface in javax.swing"><span class="strong">Renderer</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/RootPaneContainer.html" title="interface in javax.swing"><span class="strong">RootPaneContainer</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/Scrollable.html" title="interface in javax.swing"><span class="strong">Scrollable</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/ScrollPaneConstants.html" title="interface in javax.swing"><span class="strong">ScrollPaneConstants</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/SingleSelectionModel.html" title="interface in javax.swing"><span class="strong">SingleSelectionModel</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/SpinnerModel.html" title="interface in javax.swing"><span class="strong">SpinnerModel</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/SwingConstants.html" title="interface in javax.swing"><span class="strong">SwingConstants</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/UIDefaults.ActiveValue.html" title="interface in javax.swing"><span class="strong">UIDefaults.ActiveValue</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/UIDefaults.LazyValue.html" title="interface in javax.swing"><span class="strong">UIDefaults.LazyValue</span></a></li> 
    <li type="circle">javax.swing.<a href="../../javax/swing/WindowConstants.html" title="interface in javax.swing"><span class="strong">WindowConstants</span></a></li> 
   </ul> 
   <h2 title="Enum Hierarchy">Enum Hierarchy</h2> 
   <ul> 
    <li type="circle">java.lang.<a href="../../java/lang/Object.html" title="class in java.lang"><span class="strong">Object</span></a> 
     <ul> 
      <li type="circle">java.lang.<a href="../../java/lang/Enum.html" title="class in java.lang"><span class="strong">Enum</span></a>&lt;E&gt; (implements java.lang.<a href="../../java/lang/Comparable.html" title="interface in java.lang">Comparable</a>&lt;T&gt;, java.io.<a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>) 
       <ul> 
        <li type="circle">javax.swing.<a href="../../javax/swing/GroupLayout.Alignment.html" title="enum in javax.swing"><span class="strong">GroupLayout.Alignment</span></a></li> 
        <li type="circle">javax.swing.<a href="../../javax/swing/SortOrder.html" title="enum in javax.swing"><span class="strong">SortOrder</span></a></li> 
        <li type="circle">javax.swing.<a href="../../javax/swing/SwingWorker.StateValue.html" title="enum in javax.swing"><span class="strong">SwingWorker.StateValue</span></a></li> 
        <li type="circle">javax.swing.<a href="../../javax/swing/DropMode.html" title="enum in javax.swing"><span class="strong">DropMode</span></a></li> 
        <li type="circle">javax.swing.<a href="../../javax/swing/LayoutStyle.ComponentPlacement.html" title="enum in javax.swing"><span class="strong">LayoutStyle.ComponentPlacement</span></a></li> 
        <li type="circle">javax.swing.<a href="../../javax/swing/RowFilter.ComparisonType.html" title="enum in javax.swing"><span class="strong">RowFilter.ComparisonType</span></a></li> 
        <li type="circle">javax.swing.<a href="../../javax/swing/JTable.PrintMode.html" title="enum in javax.swing"><span class="strong">JTable.PrintMode</span></a></li> 
       </ul> </li> 
     </ul> </li> 
   </ul> 
  </div> <!-- ======= START OF BOTTOM NAVBAR ====== --> 
  <div class="bottomNav">
   <a name="navbar_bottom"> <!--   --> </a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow"> <!--   --> </a> 
   <ul class="navList" title="Navigation"> 
    <li><a href="../../overview-summary.html">Overview</a></li> 
    <li><a href="package-summary.html">Package</a></li> 
    <li>Class</li> 
    <li>Use</li> 
    <li class="navBarCell1Rev">Tree</li> 
    <li><a href="../../deprecated-list.html">Deprecated</a></li> 
    <li><a href="../../index-files/index-1.html">Index</a></li> 
    <li><a href="../../help-doc.html">Help</a></li> 
   </ul> 
   <div class="aboutLanguage">
    <em><strong>Java™&nbsp;Platform<br>Standard&nbsp;Ed.&nbsp;7</strong></em>
   </div> 
  </div> 
  <div class="subNav"> 
   <ul class="navList"> 
    <li><a href="../../javax/sql/rowset/spi/package-tree.html">Prev</a></li> 
    <li><a href="../../javax/swing/border/package-tree.html">Next</a></li> 
   </ul> 
   <ul class="navList"> 
    <li><a href="../../index.html?javax/swing/package-tree.html" target="_top">Frames</a></li> 
    <li><a href="package-tree.html" target="_top">No Frames</a></li> 
   </ul> 
   <ul class="navList" id="allclasses_navbar_bottom"> 
    <li><a href="../../allclasses-noframe.html">All Classes</a></li> 
   </ul> 
   <div> 
    <script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script> 
   </div> <a name="skip-navbar_bottom"> <!--   --> </a>
  </div> <!-- ======== END OF BOTTOM NAVBAR ======= --> 
  <p class="legalCopy"><small><font size="-1"> <a href="http://bugreport.sun.com/bugreport/">Submit a bug or feature</a> <br>For further API reference and developer documentation, see <a href="http://docs.oracle.com/javase/7/docs/index.html" target="_blank">Java SE Documentation</a>. That documentation contains more detailed, developer-targeted descriptions, with conceptual overviews, definitions of terms, workarounds, and working code examples.<br> <a href="../../../legal/cpyr.html">Copyright</a> © 1993, 2020, Oracle and/or its affiliates. All rights reserved. Use is subject to <a href="http://download.oracle.com/otndocs/jcp/java_se-7-mrel-spec/license.html">license terms</a>. Also see the <a target="_blank" href="http://www.oracle.com/technetwork/java/redist-137594.html">documentation redistribution policy</a>. </font></small></p> <!-- Start SiteCatalyst code   --> 
  <script type="application/javascript" src="https://www.oracleimg.com/us/assets/metrics/ora_docs.js"></script> <!-- End SiteCatalyst code --> 
  <noscript> 
   <p>Scripting on this page tracks web page traffic, but does not change the content in any way.</p> 
  </noscript>  
 </body>
</html>
