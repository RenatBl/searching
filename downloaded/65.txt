<!doctype html><!-- NewPage -->
<html lang="en"> 
 <head> 
  <title>Cleaner (jsoup Java HTML Parser 1.14.3 API)</title> 
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> 
  <meta name="dc.created" content="2021-10-01"> 
  <meta name="description" content="declaration: package: org.jsoup.safety, class: Cleaner"> 
  <meta name="generator" content="javadoc/ClassWriterImpl"> 
  <link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style"> 
  <meta name="viewport" content="width=device-width, initial-scale=1"> 
 </head> 
 <body class="class-declaration-page"> 
  <div class="flex-box"> 
   <header role="banner" class="flex-header"> 
    <nav role="navigation"> <!-- ========= START OF TOP NAVBAR ======= --> 
     <div class="top-nav" id="navbar.top"> 
      <div class="skip-nav"> <a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a> 
      </div> 
      <ul id="navbar.top.firstrow" class="nav-list" title="Navigation"> 
       <li class="home"><a href="//jsoup.org/" title="jsoup, the HTML parser for Java">jsoup</a></li> 
       <li><a href="../../../index.html">Overview</a></li> 
       <li><a href="package-summary.html">Package</a></li> 
       <li class="nav-bar-cell1-rev">Class</li> 
       <li><a href="class-use/Cleaner.html">Use</a></li> 
       <li><a href="package-tree.html">Tree</a></li> 
       <li><a href="../../../deprecated-list.html">Deprecated</a></li> 
       <li><a href="../../../index-all.html">Index</a></li> 
       <li><a href="../../../help-doc.html">Help</a></li> 
      </ul> 
     </div> <!-- ========= END OF TOP NAVBAR ========= --> <span class="skip-nav" id="skip.navbar.top"> <!--   --> </span> 
    </nav> 
   </header> 
   <div class="flex-content"> 
    <main role="main"> <!-- ======== START OF CLASS DATA ======== --> 
     <div class="header"> 
      <div class="sub-title"> <span class="package-label-in-type">Package</span>&nbsp;<a href="package-summary.html">org.jsoup.safety</a> 
      </div> 
      <h1 title="Class Cleaner" class="title">Class Cleaner</h1> 
     </div> 
     <div class="inheritance" title="Inheritance Tree"> <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html" title="class or interface in java.lang" class="external-link">java.lang.Object</a> 
      <div class="inheritance">
        org.jsoup.safety.Cleaner 
      </div> 
     </div> 
     <section class="description"> 
      <hr> 
      <pre>public class <span class="type-name-label">Cleaner</span>
extends <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html" title="class or interface in java.lang" class="external-link">Object</a></pre> 
      <div class="block">
        The safelist based HTML cleaner. Use to ensure that end-user provided HTML contains only the elements and attributes that you are expecting; no junk, and no cross-site scripting attacks! 
       <p> The HTML cleaner parses the input as HTML and then runs it through a safe-list, so the output HTML can only contain HTML that is allowed by the safelist. </p> 
       <p> It is assumed that the input HTML is a body fragment; the clean methods only pull from the source's body, and the canned safe-lists only allow body contained tags. </p> 
       <p> Rather than interacting directly with a Cleaner object, generally see the <code>clean</code> methods in <a href="../Jsoup.html" title="class in org.jsoup"><code>Jsoup</code></a>. </p> 
      </div> 
     </section> 
     <section class="summary"> 
      <ul class="summary-list"> <!-- ======== CONSTRUCTOR SUMMARY ======== --> 
       <li> 
        <section class="constructor-summary" id="constructor.summary"> 
         <h2>Constructor Summary</h2> 
         <div class="member-summary"> 
          <table class="summary-table"> 
           <caption> <span>Constructors</span> 
           </caption> 
           <thead> 
            <tr> 
             <th class="col-first" scope="col">Constructor</th> 
             <th class="col-last" scope="col">Description</th> 
            </tr> 
           </thead> 
           <tbody> 
            <tr class="alt-color"> 
             <th class="col-constructor-name" scope="row"><code><span class="member-name-link"><a href="#%3Cinit%3E(org.jsoup.safety.Safelist)">Cleaner</a></span>​(<a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a>&nbsp;safelist)</code></th> 
             <td class="col-last"> 
              <div class="block">
                Create a new cleaner, that sanitizes documents using the supplied safelist. 
              </div> </td> 
            </tr> 
            <tr class="row-color"> 
             <th class="col-constructor-name" scope="row"><code><span class="member-name-link"><a href="#%3Cinit%3E(org.jsoup.safety.Whitelist)">Cleaner</a></span>​(<a href="Whitelist.html" title="class in org.jsoup.safety">Whitelist</a>&nbsp;whitelist)</code></th> 
             <td class="col-last"> 
              <div class="block"> <span class="deprecated-label">Deprecated.</span> 
               <div class="deprecation-comment">
                 as of 1.14.1. 
               </div> 
              </div> </td> 
            </tr> 
           </tbody> 
          </table> 
         </div> 
        </section> </li> <!-- ========== METHOD SUMMARY =========== --> 
       <li> 
        <section class="method-summary" id="method.summary"> 
         <h2>Method Summary</h2> 
         <div class="member-summary" id="method-summary-table"> 
          <div id="method-summary-table.tabpanel" role="tabpanel"> 
           <table class="summary-table" aria-labelledby="t0"> 
            <thead> 
             <tr> 
              <th class="col-first" scope="col">Modifier and Type</th> 
              <th class="col-second" scope="col">Method</th> 
              <th class="col-last" scope="col">Description</th> 
             </tr> 
            </thead> 
            <tbody> 
             <tr class="alt-color" id="i0"> 
              <td class="col-first"><code><a href="../nodes/Document.html" title="class in org.jsoup.nodes">Document</a></code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#clean(org.jsoup.nodes.Document)">clean</a></span>​(<a href="../nodes/Document.html" title="class in org.jsoup.nodes">Document</a>&nbsp;dirtyDocument)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Creates a new, clean document, from the original dirty document, containing only elements allowed by the safelist. 
               </div> </td> 
             </tr> 
             <tr class="row-color" id="i1"> 
              <td class="col-first"><code>boolean</code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#isValid(org.jsoup.nodes.Document)">isValid</a></span>​(<a href="../nodes/Document.html" title="class in org.jsoup.nodes">Document</a>&nbsp;dirtyDocument)</code></th> 
              <td class="col-last"> 
               <div class="block">
                 Determines if the input document <b>body</b>is valid, against the safelist. 
               </div> </td> 
             </tr> 
             <tr class="alt-color" id="i2"> 
              <td class="col-first"><code>boolean</code></td> 
              <th class="col-second" scope="row"><code><span class="member-name-link"><a href="#isValidBodyHtml(java.lang.String)">isValidBodyHtml</a></span>​(<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;bodyHtml)</code></th> 
              <td class="col-last">&nbsp;</td> 
             </tr> 
            </tbody> 
           </table> 
          </div> 
         </div> 
         <div class="inherited-list"> 
          <h3 id="methods.inherited.from.class.java.lang.Object">Methods inherited from class&nbsp;java.lang.<a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html" title="class or interface in java.lang" class="external-link">Object</a></h3> <code><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#clone()" title="class or interface in java.lang" class="external-link">clone</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#equals(java.lang.Object)" title="class or interface in java.lang" class="external-link">equals</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#finalize()" title="class or interface in java.lang" class="external-link">finalize</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#getClass()" title="class or interface in java.lang" class="external-link">getClass</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#hashCode()" title="class or interface in java.lang" class="external-link">hashCode</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#notify()" title="class or interface in java.lang" class="external-link">notify</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#notifyAll()" title="class or interface in java.lang" class="external-link">notifyAll</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#toString()" title="class or interface in java.lang" class="external-link">toString</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#wait()" title="class or interface in java.lang" class="external-link">wait</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#wait(long)" title="class or interface in java.lang" class="external-link">wait</a>, <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#wait(long,int)" title="class or interface in java.lang" class="external-link">wait</a></code> 
         </div> 
        </section> </li> 
      </ul> 
     </section> 
     <section class="details"> 
      <ul class="details-list"> <!-- ========= CONSTRUCTOR DETAIL ======== --> 
       <li> 
        <section class="constructor-details" id="constructor.detail"> 
         <h2>Constructor Details</h2> 
         <ul class="member-list"> 
          <li> 
           <section class="detail" id="<init>(org.jsoup.safety.Safelist)"> 
            <h3>Cleaner</h3> 
            <div class="member-signature"> <span class="modifiers">public</span>&nbsp;<span class="member-name">Cleaner</span>​(<span class="parameters"><a href="Safelist.html" title="class in org.jsoup.safety">Safelist</a>&nbsp;safelist)</span> 
            </div> 
            <div class="block">
              Create a new cleaner, that sanitizes documents using the supplied safelist. 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>safelist</code> - safe-list to clean with 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="<init>(org.jsoup.safety.Whitelist)"> 
            <h3>Cleaner</h3> 
            <div class="member-signature"> <span class="annotations"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Deprecated.html" title="class or interface in java.lang" class="external-link">@Deprecated</a> </span><span class="modifiers">public</span>&nbsp;<span class="member-name">Cleaner</span>​(<span class="parameters"><a href="Whitelist.html" title="class in org.jsoup.safety">Whitelist</a>&nbsp;whitelist)</span> 
            </div> 
            <div class="deprecation-block"> <span class="deprecated-label">Deprecated.</span> 
             <div class="deprecation-comment">
               as of 1.14.1. 
             </div> 
            </div> 
            <div class="block">
              Use <a href="#%3Cinit%3E(org.jsoup.safety.Safelist)"><code>Cleaner(Safelist)</code></a> instead. 
            </div> 
           </section> </li> 
         </ul> 
        </section> </li> <!-- ============ METHOD DETAIL ========== --> 
       <li> 
        <section class="method-details" id="method.detail"> 
         <h2>Method Details</h2> 
         <ul class="member-list"> 
          <li> 
           <section class="detail" id="clean(org.jsoup.nodes.Document)"> 
            <h3>clean</h3> 
            <div class="member-signature"> <span class="modifiers">public</span>&nbsp;<span class="return-type"><a href="../nodes/Document.html" title="class in org.jsoup.nodes">Document</a></span>&nbsp;<span class="member-name">clean</span>​(<span class="parameters"><a href="../nodes/Document.html" title="class in org.jsoup.nodes">Document</a>&nbsp;dirtyDocument)</span> 
            </div> 
            <div class="block">
              Creates a new, clean document, from the original dirty document, containing only elements allowed by the safelist. The original document is not modified. Only elements from the dirty document's <code>body</code> are used. The OutputSettings of the original document are cloned into the clean document. 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>dirtyDocument</code> - Untrusted base document to clean. 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               cleaned document. 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="isValid(org.jsoup.nodes.Document)"> 
            <h3>isValid</h3> 
            <div class="member-signature"> <span class="modifiers">public</span>&nbsp;<span class="return-type">boolean</span>&nbsp;<span class="member-name">isValid</span>​(<span class="parameters"><a href="../nodes/Document.html" title="class in org.jsoup.nodes">Document</a>&nbsp;dirtyDocument)</span> 
            </div> 
            <div class="block">
              Determines if the input document <b>body</b>is valid, against the safelist. It is considered valid if all the tags and attributes in the input HTML are allowed by the safelist, and that there is no content in the <code>head</code>. 
             <p> This method can be used as a validator for user input. An invalid document will still be cleaned successfully using the <a href="#clean(org.jsoup.nodes.Document)"><code>clean(Document)</code></a> document. If using as a validator, it is recommended to still clean the document to ensure enforced attributes are set correctly, and that the output is tidied. </p> 
            </div> 
            <dl class="notes"> 
             <dt>
               Parameters: 
             </dt> 
             <dd> <code>dirtyDocument</code> - document to test 
             </dd> 
             <dt>
               Returns: 
             </dt> 
             <dd>
               true if no tags or attributes need to be removed; false if they do 
             </dd> 
            </dl> 
           </section> </li> 
          <li> 
           <section class="detail" id="isValidBodyHtml(java.lang.String)"> 
            <h3>isValidBodyHtml</h3> 
            <div class="member-signature"> <span class="modifiers">public</span>&nbsp;<span class="return-type">boolean</span>&nbsp;<span class="member-name">isValidBodyHtml</span>​(<span class="parameters"><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class or interface in java.lang" class="external-link">String</a>&nbsp;bodyHtml)</span> 
            </div> 
           </section> </li> 
         </ul> 
        </section> </li> 
      </ul> 
     </section> <!-- ========= END OF CLASS DATA ========= --> 
    </main> 
    <footer role="contentinfo"> 
     <nav role="navigation"> <!-- ======= START OF BOTTOM NAVBAR ====== --> 
      <div class="bottom-nav" id="navbar.bottom"> 
       <div class="skip-nav"> <a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a> 
       </div> 
       <ul id="navbar.bottom.firstrow" class="nav-list" title="Navigation"> 
        <li class="home"><a href="//jsoup.org/" title="jsoup, the HTML parser for Java">jsoup</a></li> 
        <li><a href="../../../index.html">Overview</a></li> 
        <li><a href="package-summary.html">Package</a></li> 
        <li class="nav-bar-cell1-rev">Class</li> 
        <li><a href="class-use/Cleaner.html">Use</a></li> 
        <li><a href="package-tree.html">Tree</a></li> 
        <li><a href="../../../deprecated-list.html">Deprecated</a></li> 
        <li><a href="../../../index-all.html">Index</a></li> 
        <li><a href="../../../help-doc.html">Help</a></li> 
       </ul> 
      </div> <!-- ======== END OF BOTTOM NAVBAR ======= --> <span class="skip-nav" id="skip.navbar.bottom"> <!--   --> </span> 
     </nav> 
     <p class="legal-copy"><small>Copyright © 2009–2021 <a href="https://jhy.io/">Jonathan Hedley</a>. All rights reserved.</small></p> 
    </footer> 
   </div> 
  </div> 
  <script>window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;ga('create','UA-89734-10','auto');ga('send', 'pageview');</script> 
  <script async src="https://www.google-analytics.com/analytics.js"></script>  
 </body>
</html>
